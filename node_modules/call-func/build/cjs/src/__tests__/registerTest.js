"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _jsdomGlobal = _interopRequireDefault(require("jsdom-global"));

var _createEl = require("create-el");

var _cssQuerySelector = _interopRequireDefault(require("css-query-selector"));

var _register = _interopRequireWildcard(require("../register"));

var keys = Object.keys;
describe("Test Register", function () {
  var reset;
  beforeEach(function () {
    reset = (0, _jsdomGlobal["default"])();
  });
  afterEach(function () {
    return reset();
  });
  it("basic test", function () {
    var span = (0, _createEl.create)("span")()({
      id: "unit-span"
    });
    (0, _createEl.inject)()(span);
    var oReg = (0, _register["default"])(span);
    var i = 0;
    var evId = oReg.addEventListener("click", function () {
      i++;
    });
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
    span.dispatchEvent(new Event("click"));
    oReg.removeEventListener(evId);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
  });
  it("Compatiable with native event", function () {
    var span = (0, _createEl.create)("span")()({
      id: "unit-span"
    });
    (0, _createEl.inject)()(span);
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _register["default"])(span).addEventListener("click", func);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
    (0, _register["default"])(span).removeEventListener("click", func);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
  });
  it("Test clean all with one element", function () {
    var span = (0, _createEl.create)("span")()({
      id: "unit-span"
    });
    (0, _createEl.inject)()(span);
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _chai.expect)(keys((0, _register["default"])(span).optionMap).length).to.equal(0);
    (0, _register["default"])(span).addEventListener("click", func);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
    (0, _chai.expect)(keys((0, _register["default"])(span).optionMap).length).to.equal(1);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
    (0, _register["default"])(span).cleanAll();
    (0, _chai.expect)(keys((0, _register["default"])(span).optionMap).length).to.equal(0);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
  });
  it("Test cleanAll with type", function () {
    var span = (0, _createEl.create)("span")()();
    (0, _createEl.inject)()(span);
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _register["default"])(span).addEventListener("click", func);
    (0, _register["default"])(span).addEventListener("mousedown", func);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
    span.dispatchEvent(new Event("mousedown"));
    (0, _chai.expect)(i).to.equal(2);
    (0, _register["default"])(span).cleanAll("click");
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
    span.dispatchEvent(new Event("mousedown"));
    (0, _chai.expect)(i).to.equal(3);
  });
  it("Test cleanAllRegister", function () {
    var span = (0, _createEl.create)("span")()();
    var div = (0, _createEl.create)("div")()();
    (0, _createEl.inject)()(span);
    (0, _createEl.inject)()(div);
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _register["default"])(span).addEventListener("click", func);
    (0, _register["default"])(div).addEventListener("click", func);
    span.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
    div.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
    (0, _register.cleanAllRegister)();
    span.dispatchEvent(new Event("click"));
    div.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(2);
  });
  it("Test with document", function () {
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _register["default"])(document).addEventListener("click", func);
    document.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
  });
  it("Test with window", function () {
    var i = 0;

    var func = function func() {
      i++;
    };

    (0, _register["default"])(window).addEventListener("click", func);
    window.dispatchEvent(new Event("click"));
    (0, _chai.expect)(i).to.equal(1);
  });
});