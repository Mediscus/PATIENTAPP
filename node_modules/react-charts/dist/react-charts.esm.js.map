{"version":3,"file":"react-charts.esm.js","sources":["../src/hooks/useGetLatest.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useRect.ts","../src/utils/Utils.ts","../src/utils/chartContext.tsx","../src/utils/curveMonotone.ts","../src/seriesTypes/Area.tsx","../src/seriesTypes/Bar.tsx","../src/seriesTypes/Line.tsx","../src/utils/buildAxis.linear.ts","../src/components/AxisLinear.useMeasure.ts","../src/components/AxisLinear.tsx","../src/hooks/useLatestWhen.ts","../src/hooks/usePortalElement.ts","../src/components/Cursors.tsx","../src/hooks/useAnchor.tsx","../src/hooks/usePrevious.ts","../src/components/TooltipRenderer.tsx","../src/components/Tooltip.tsx","../src/components/Voronoi.tsx","../src/components/Chart.tsx"],"sourcesContent":["import React from 'react'\n\nexport default function useGetLatest<T>(obj: T) {\n  const ref = React.useRef<T>(obj)\n  const getterRef = React.useRef<() => T>()\n\n  ref.current = obj\n  if (!getterRef.current) {\n    getterRef.current = () => ref.current\n  }\n\n  return getterRef.current\n}\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\n\nimport observeRect from '@reach/observe-rect'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport type HasBoundingClientRect = {\n  getBoundingClientRect: () => DOMRect\n}\n\nexport default function useRect(\n  node: HasBoundingClientRect | null | undefined,\n  options?: {\n    enabled?: boolean\n    initialWidth?: number\n    initialHeight?: number\n  }\n) {\n  const enabled = options?.enabled ?? true\n\n  const [element, setElement] = React.useState(node)\n\n  let [rect, setRect] = React.useState<DOMRect>({\n    width: options?.initialWidth ?? 0,\n    height: options?.initialHeight ?? 0,\n  } as DOMRect)\n\n  useIsomorphicLayoutEffect(() => {\n    if (node !== element) {\n      setElement(node)\n    }\n  })\n\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      setRect(element.getBoundingClientRect())\n    }\n  }, [element])\n\n  // const isScrolling = useIsScrolling(200)\n\n  React.useEffect(() => {\n    if (!element || !enabled) {\n      return\n    }\n\n    const observer = observeRect(element as Element, setRect)\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element, enabled])\n\n  // const resolvedRect = React.useMemo(() => {\n  //   if (!element || !(element as Element).tagName) {\n  //     return rect\n  //   }\n\n  //   const styles = window.getComputedStyle(element as Element)\n\n  //   return {\n  //     x: rect.x,\n  //     y: rect.y,\n  //     width:\n  //       rect.width -\n  //       parseInt(styles.borderLeftWidth) -\n  //       parseInt(styles.borderRightWidth),\n  //     height:\n  //       rect.height -\n  //       parseInt(styles.borderTopWidth) -\n  //       parseInt(styles.borderBottomWidth),\n  //     top: rect.top,\n  //     right: rect.right,\n  //     bottom: rect.bottom,\n  //     left: rect.left,\n  //   }\n  // }, [element, rect])\n\n  return rect\n}\n","import {\n  Axis,\n  Datum,\n  DatumFocusStatus,\n  DatumStyles,\n  Series,\n  SeriesFocusStatus,\n  SeriesStyles,\n} from '../types'\n\nexport function getSeriesStatus<TDatum>(\n  series: Series<TDatum>,\n  focusedDatum: Datum<TDatum> | null\n): SeriesFocusStatus {\n  if (focusedDatum?.seriesId === series.id) {\n    return 'focused'\n  }\n\n  return 'none'\n}\n\nexport function getDatumStatus<TDatum>(\n  datum: Datum<TDatum>,\n  focusedDatum: Datum<TDatum> | null\n): DatumFocusStatus {\n  if (datum === focusedDatum) {\n    return 'focused'\n  }\n\n  if (\n    datum.group?.some(groupDatum => {\n      groupDatum.seriesId === focusedDatum?.seriesId &&\n        groupDatum.index === focusedDatum?.index\n    })\n  ) {\n    return 'groupFocused'\n  }\n\n  return 'none'\n}\n\nfunction normalizeColor(\n  style: SeriesStyles | DatumStyles,\n  defaults: SeriesStyles | DatumStyles\n): SeriesStyles | DatumStyles {\n  return {\n    ...style,\n    stroke: style.stroke || style.color || defaults.stroke || defaults.color,\n    fill: style.fill || style.color || defaults.fill || defaults.color,\n  }\n}\n\nconst elementTypes = ['area', 'line', 'rectangle', 'circle'] as const\n\nexport function materializeStyles(\n  style: SeriesStyles | DatumStyles = {},\n  defaults: SeriesStyles | DatumStyles = {}\n) {\n  style = normalizeColor(style, defaults)\n  for (let i = 0; i < elementTypes.length; i++) {\n    const type = elementTypes[i]\n    if (style[type] && defaults[type]) {\n      style[type] = materializeStyles(style[type], defaults)\n    }\n  }\n  return style\n}\n\nexport function isValidPoint(d: any) {\n  if (d === null) {\n    return false\n  }\n  if (typeof d === 'undefined') {\n    return false\n  }\n  if (typeof d === 'string' && d === 'null') {\n    return false\n  }\n  return true\n}\n\nexport function translateX(x: number) {\n  return `translate3d(${Math.round(x)}px, 0, 0)`\n}\n\nexport function translateY(y: number) {\n  return `translate3d(0, ${Math.round(y)}px, 0)`\n}\n\nexport function translate(x: number, y: number) {\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`\n}\n\nexport function getSecondaries<TDatum>(\n  datum: Datum<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): [number, number] {\n  if (secondaryAxis.stacked) {\n    return [\n      secondaryAxis.scale(datum.stackData?.[0] ?? NaN) ?? NaN,\n      secondaryAxis.scale(datum.stackData?.[1] ?? NaN) ?? NaN,\n    ]\n  }\n\n  return [\n    secondaryAxis.scale(0) ?? NaN,\n    secondaryAxis.scale(secondaryAxis.getValue(datum.originalDatum)) ?? NaN,\n  ]\n}\n\nexport function getPrimary<TDatum>(\n  datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>\n): number {\n  let primary: number\n\n  if (primaryAxis.stacked) {\n    primary =\n      primaryAxis.scale(datum.stackData?.[primaryAxis.invert ? 1 : 0] ?? NaN) ??\n      NaN\n  } else {\n    primary =\n      primaryAxis.scale(primaryAxis.getValue(datum.originalDatum)) ?? NaN\n  }\n\n  if (primaryAxis.axisFamily !== 'band') {\n    primary = primary - getPrimaryLength(datum, primaryAxis) / 2\n  }\n\n  return primary\n}\n\nexport function getPrimaryLength<TDatum>(\n  _datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>\n) {\n  if (primaryAxis.axisFamily === 'band') {\n    return Math.min(\n      Math.max(\n        primaryAxis.scale.bandwidth(),\n        primaryAxis.minBandSize ?? 99999999\n      ),\n      primaryAxis.maxBandSize ?? 1\n    )\n  }\n\n  return Math.max(primaryAxis.bandScale.bandwidth(), 1)\n}\n\nexport function getSecondaryLength<TDatum>(\n  datum: Datum<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): number {\n  const secondary = getSecondaries(datum, secondaryAxis).sort()\n  return Math.abs(secondary[1] - secondary[0])\n}\n\nexport function getX<TDatum>(\n  datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): number {\n  return primaryAxis.isVertical\n    ? getSecondaries(datum, secondaryAxis)[secondaryAxis.invert ? 1 : 0]\n    : getPrimary(datum, primaryAxis)\n}\n\nexport function getY<TDatum>(\n  datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): number {\n  return primaryAxis.isVertical\n    ? getPrimary(datum, primaryAxis)\n    : getSecondaries(datum, secondaryAxis)[secondaryAxis.invert ? 1 : 0] -\n        getSecondaryLength(datum, secondaryAxis)\n}\n\nexport function getWidth<TDatum>(\n  datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): number {\n  return primaryAxis.isVertical\n    ? getSecondaryLength(datum, secondaryAxis)\n    : getPrimaryLength(datum, primaryAxis)\n}\n\nexport function getHeight<TDatum>(\n  datum: Datum<TDatum>,\n  primaryAxis: Axis<TDatum>,\n  secondaryAxis: Axis<TDatum>\n): number {\n  return primaryAxis.isVertical\n    ? getPrimaryLength(datum, primaryAxis)\n    : getSecondaryLength(datum, secondaryAxis)\n}\n\nexport function getTickPx<TDatum>(scale: Axis<TDatum>['scale'], value: any) {\n  let px = scale(value) ?? NaN\n\n  // @ts-ignore\n  if (scale.bandwidth) {\n    // @ts-ignore\n    return px + scale.bandwidth() / 2\n  }\n\n  return px\n}\n","import * as React from 'react'\n\nimport { ChartContextValue } from '../types'\n\nconst chartContext = React.createContext<any>(null!)\n\nexport function ChartContextProvider<TDatum>({\n  value,\n  children,\n}: {\n  value: () => ChartContextValue<TDatum>\n  children: React.ReactNode\n}) {\n  return <chartContext.Provider value={value} children={children} />\n}\n\nexport default function useChartContext<TDatum>() {\n  return React.useContext(chartContext)() as ChartContextValue<TDatum>\n}\n","// @ts-nocheck\nimport { CurveFactory } from 'd3-shape'\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n    h1 = x2 - that._x1,\n    s0 = (that._y1 - that._y0) / (h0 || (h1 < 0 && -0)),\n    s1 = (y2 - that._y1) / (h1 || (h0 < 0 && -0)),\n    p = (s0 * h1 + s1 * h0) / (h0 + h1)\n  return (\n    (sign(s0) + sign(s1)) *\n      Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0\n  )\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0\n  return h ? ((3 * (that._y1 - that._y0)) / h - t) / 2 : t\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic BÃ©zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 3\n  that._context.bezierCurveTo(\n    x0 + dx,\n    y0 + dx * t0,\n    x1 - dx,\n    y1 - dx * t1,\n    x1,\n    y1\n  )\n}\n\nfunction MonotoneX(context) {\n  this._context = context\n}\n\nMonotoneX.prototype = {\n  areaStart: function () {\n    this._line = 0\n  },\n  areaEnd: function () {\n    this._line = NaN\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN\n    this._point = 0\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1)\n        break\n      case 3:\n        point(this, this._t0, slope2(this, this._t0))\n        break\n    }\n    if (this._line || (this._line !== 0 && this._point === 1))\n      this._context.closePath()\n    this._line = 1 - this._line\n  },\n  point: function (x, y) {\n    var t1 = NaN\n\n    ;(x = +x), (y = +y)\n    if (x === this._x1 && y === this._y1) return // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y)\n        break\n      case 1:\n        this._point = 2\n        break\n      case 2:\n        this._point = 3\n        point(this, slope2(this, (t1 = slope3(this, x, y))), t1)\n        break\n      default:\n        point(this, this._t0, (t1 = slope3(this, x, y)))\n        break\n    }\n\n    ;(this._x0 = this._x1), (this._x1 = x)\n    ;(this._y0 = this._y1), (this._y1 = y)\n    this._t0 = t1\n  },\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context)\n}\n\n;(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (\n  x,\n  y\n) {\n  MonotoneX.prototype.point.call(this, y, x)\n}\n\nfunction ReflectContext(context) {\n  this._context = context\n}\n\nReflectContext.prototype = {\n  moveTo: function (x, y) {\n    this._context.moveTo(y, x)\n  },\n  closePath: function () {\n    this._context.closePath()\n  },\n  lineTo: function (x, y) {\n    this._context.lineTo(y, x)\n  },\n  bezierCurveTo: function (x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x)\n  },\n}\n\nexport const monotoneX: CurveFactory = context => new MonotoneX(context)\n\nexport const monotoneY: CurveFactory = context => new MonotoneY(context)\n","import { area, line } from 'd3-shape'\nimport React from 'react'\n\nimport { Axis, Series, Datum } from '../types'\nimport { translate } from '../utils/Utils'\nimport useChartContext from '../utils/chartContext'\n//\nimport { monotoneX } from '../utils/curveMonotone'\n\nexport default function AreaComponent<TDatum>({\n  primaryAxis,\n  secondaryAxis,\n  series: allSeries,\n}: {\n  primaryAxis: Axis<TDatum>\n  secondaryAxis: Axis<TDatum>\n  series: Series<TDatum>[]\n}) {\n  const {\n    getSeriesStatusStyle,\n    getDatumStatusStyle,\n    useFocusedDatumAtom,\n    gridDimensions,\n  } = useChartContext<TDatum>()\n\n  const curve = secondaryAxis.curve ?? monotoneX\n\n  const [focusedDatum] = useFocusedDatumAtom()\n\n  const xAxis = primaryAxis.isVertical ? secondaryAxis : primaryAxis\n  const yAxis = !primaryAxis.isVertical ? secondaryAxis : primaryAxis\n\n  const getX = (datum: Datum<TDatum>) =>\n    xAxis.scale(\n      xAxis.stacked ? datum.stackData?.[1] : xAxis.getValue(datum.originalDatum)\n    )\n\n  const getY = (datum: Datum<TDatum>, isEnd: 0 | 1) =>\n    yAxis.scale(\n      yAxis.stacked\n        ? datum.stackData?.[isEnd]\n        : yAxis.getValue(datum.originalDatum)\n    )\n\n  return (\n    <g\n      style={{\n        transform: translate(gridDimensions.gridX, gridDimensions.gridY),\n      }}\n    >\n      {allSeries.map((series, i) => {\n        const style = getSeriesStatusStyle(series, focusedDatum)\n\n        const lineStyle = {\n          strokeWidth: 2,\n          ...style,\n          ...style.line,\n          fill: 'none',\n        }\n\n        const areaStyle = {\n          strokeWidth: 2,\n          opacity: 0.5,\n          ...style,\n          ...style.area,\n        }\n\n        const areaPath =\n          area<Datum<TDatum>>(\n            datum => getX(datum) ?? NaN,\n            datum => getY(datum, 0) ?? NaN,\n            datum => getY(datum, 1) ?? NaN\n          ).curve(curve)(series.datums) ?? undefined\n\n        const linePath =\n          line<Datum<TDatum>>(\n            datum => getX(datum) ?? NaN,\n            datum => getY(datum, 1) ?? NaN\n          ).curve(curve)(series.datums) ?? undefined\n\n        return (\n          <g key={`lines-${i}`}>\n            <path d={areaPath} style={areaStyle} />\n            <path d={linePath} style={lineStyle} />\n            {series.datums.map((datum, i) => {\n              const dataStyle = getDatumStatusStyle(datum, focusedDatum)\n\n              return (\n                <circle\n                  key={i}\n                  ref={el => {\n                    datum.element = el\n                  }}\n                  r={2}\n                  cx={getX(datum)}\n                  cy={getY(datum, 1) ?? NaN}\n                  stroke=\"rgba(33,33,33,0.5)\"\n                  style={{\n                    // @ts-ignore\n                    r: 2,\n                    ...style,\n                    ...style.circle,\n                    ...dataStyle,\n                    ...dataStyle.circle,\n                    ...(!(secondaryAxis.showDatumElements ?? true)\n                      ? {\n                          opacity: 0,\n                        }\n                      : {}),\n                  }}\n                />\n              )\n            })}\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import React from 'react'\n\nimport { Axis, Series } from '../types'\nimport { getHeight, getWidth, getX, getY, translate } from '../utils/Utils'\nimport useChartContext from '../utils/chartContext'\n\n//\n\nexport default function BarComponent<TDatum>({\n  primaryAxis,\n  secondaryAxis,\n  series: allSeries,\n}: {\n  primaryAxis: Axis<TDatum>\n  secondaryAxis: Axis<TDatum>\n  series: Series<TDatum>[]\n}) {\n  const {\n    getSeriesStatusStyle,\n    getDatumStatusStyle,\n    useFocusedDatumAtom,\n    gridDimensions,\n  } = useChartContext<TDatum>()\n\n  const [focusedDatum] = useFocusedDatumAtom()\n\n  return (\n    <g\n      style={{\n        transform: translate(gridDimensions.gridX, gridDimensions.gridY),\n      }}\n    >\n      {allSeries.map((series, i) => {\n        const style = getSeriesStatusStyle(series, focusedDatum)\n\n        return (\n          <g key={`lines-${i}`}>\n            {series.datums.map((datum, i) => {\n              const dataStyle = getDatumStatusStyle(datum, focusedDatum)\n\n              return (\n                <rect\n                  ref={el => {\n                    datum.element = el\n                  }}\n                  key={i}\n                  x={getX(datum, primaryAxis, secondaryAxis) ?? NaN}\n                  y={getY(datum, primaryAxis, secondaryAxis) ?? NaN}\n                  width={getWidth(datum, primaryAxis, secondaryAxis) ?? NaN}\n                  height={getHeight(datum, primaryAxis, secondaryAxis) ?? NaN}\n                  style={{\n                    strokeWidth: 0,\n                    ...style,\n                    ...style.rectangle,\n                    ...dataStyle,\n                    ...dataStyle.rectangle,\n                  }}\n                />\n              )\n            })}\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import { line } from 'd3-shape'\nimport React from 'react'\n\nimport { Axis, Series, Datum } from '../types'\nimport { translate } from '../utils/Utils'\nimport useChartContext from '../utils/chartContext'\n//\nimport { monotoneX } from '../utils/curveMonotone'\n\nconst pathDefaultStyle = {\n  strokeWidth: 2,\n}\n\nexport default function Line<TDatum>({\n  primaryAxis,\n  secondaryAxis,\n  series: allSeries,\n}: {\n  primaryAxis: Axis<TDatum>\n  secondaryAxis: Axis<TDatum>\n  series: Series<TDatum>[]\n}) {\n  const {\n    getSeriesStatusStyle,\n    getDatumStatusStyle,\n    useFocusedDatumAtom,\n    gridDimensions,\n  } = useChartContext<TDatum>()\n\n  const curve = secondaryAxis.curve ?? monotoneX\n\n  const [focusedDatum] = useFocusedDatumAtom()\n\n  const xAxis = primaryAxis.isVertical ? secondaryAxis : primaryAxis\n  const yAxis = !primaryAxis.isVertical ? secondaryAxis : primaryAxis\n\n  const getX = (datum: Datum<TDatum>) =>\n    xAxis.scale(\n      xAxis.stacked ? datum.stackData?.[1] : xAxis.getValue(datum.originalDatum)\n    )\n\n  const getY = (datum: Datum<TDatum>) =>\n    yAxis.scale(\n      yAxis.stacked ? datum.stackData?.[1] : yAxis.getValue(datum.originalDatum)\n    )\n\n  return (\n    <g\n      style={{\n        transform: translate(gridDimensions.gridX, gridDimensions.gridY),\n      }}\n    >\n      {allSeries.map((series, i) => {\n        const style = getSeriesStatusStyle(series, focusedDatum)\n\n        const lineStyle = {\n          ...pathDefaultStyle,\n          ...style,\n          ...style.line,\n          fill: 'none',\n        }\n\n        const linePath =\n          line<Datum<TDatum>>(\n            datum => getX(datum) ?? NaN,\n            datum => getY(datum) ?? NaN\n          ).curve(curve)(series.datums) ?? undefined\n\n        return (\n          <g key={`lines-${i}`}>\n            {series.datums.map((datum, i) => {\n              const dataStyle = getDatumStatusStyle(datum, focusedDatum)\n\n              return (\n                <circle\n                  key={i}\n                  ref={el => {\n                    datum.element = el\n                  }}\n                  r={2}\n                  cx={getX(datum)}\n                  cy={getY(datum)}\n                  stroke=\"rgba(33,33,33,0.5)\"\n                  fill=\"transparent\"\n                  style={{\n                    // @ts-ignore\n                    r: 2,\n                    ...style,\n                    ...style.circle,\n                    ...dataStyle,\n                    ...dataStyle.circle,\n                    ...(!(secondaryAxis.showDatumElements ?? true)\n                      ? {\n                          opacity: 0,\n                        }\n                      : {}),\n                  }}\n                />\n              )\n            })}\n            <path d={linePath} style={lineStyle} />\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import { extent, range as d3Range } from 'd3-array'\nimport {\n  scaleLinear,\n  scaleLog,\n  scaleTime,\n  scaleUtc,\n  scaleBand,\n  ScaleTime,\n  ScaleLinear,\n} from 'd3-scale'\n\nimport {\n  Axis,\n  AxisBand,\n  AxisBandOptions,\n  AxisLinear,\n  AxisLinearOptions,\n  AxisOptions,\n  AxisTime,\n  AxisTimeOptions,\n  GridDimensions,\n  ResolvedAxisOptions,\n  Series,\n} from '../types'\n\nfunction defaultAxisOptions<TDatum>(\n  options: AxisOptions<TDatum>\n): ResolvedAxisOptions<AxisOptions<TDatum>> {\n  return {\n    ...options,\n    elementType: options.elementType ?? 'line',\n    // tickCount: options.tickCount ?? 10,\n    // minTickCount: options.minTickCount ?? 1,\n    // maxTickCount: options.maxTickCount ?? 99999999,\n    // tickSizeInner: options.tickSizeInner ?? 6,\n    // tickSizeOuter: options.tickSizeOuter ?? 6,\n    minTickPaddingForRotation: options.minTickPaddingForRotation ?? 10,\n    tickLabelRotationDeg: options.tickLabelRotationDeg ?? 60,\n    innerBandPadding: options.innerBandPadding ?? 0.6,\n    outerBandPadding: options.outerBandPadding ?? 0.2,\n    // showTicks: options.showTicks ?? true,\n    // filterTicks: options.filterTicks ?? (d => d),\n    show: options.show ?? true,\n    stacked: options.stacked ?? false,\n  }\n}\n\nexport default function buildAxisLinear<TDatum>(\n  userOptions: AxisOptions<TDatum>,\n  series: Series<TDatum>[],\n  gridDimensions: GridDimensions,\n  width: number,\n  height: number\n): Axis<TDatum> {\n  const options = defaultAxisOptions(userOptions)\n\n  if (!options.position) {\n    throw new Error(`Chart axes must have a valid 'position' property`)\n  }\n\n  const isVertical = ['left', 'right'].indexOf(options.position) > -1\n\n  // Now we need to figure out the range\n  const range: [number, number] = isVertical\n    ? [gridDimensions.gridHeight, 0]\n    : [0, gridDimensions.gridWidth]\n\n  const outerRange: [number, number] = isVertical ? [height, 0] : [0, width]\n\n  // Give the scale a home\n  return options.scaleType === 'time' || options.scaleType === 'localTime'\n    ? buildTimeAxis(options, series, isVertical, range, outerRange)\n    : options.scaleType === 'linear' || options.scaleType === 'log'\n    ? buildLinearAxis(options, series, isVertical, range, outerRange)\n    : options.scaleType === 'band'\n    ? buildBandAxis(options, series, isVertical, range, outerRange)\n    : (() => {\n        throw new Error('Invalid scale type')\n      })()\n\n  // @ts-ignore\n  // const scaleFormat = scale.tickFormat ? scale.tickFormat() : d => d\n\n  // const userFormat = options?.format\n\n  // const format = userFormat\n  //   ? (value: unknown, index: number) =>\n  //       userFormat(value, index, scaleFormat(value))\n  //   : scaleFormat\n\n  // const resolvedTickCount = options.tickCount\n\n  // const ticks = options.filterTicks(\n  //   options.tickValues ||\n  //     // @ts-ignore\n  //     (scale.ticks ? scale.ticks(resolvedTickCount) : scale.domain())\n  // )\n\n  // const scaleMax =\n  //   options.position === 'bottom'\n  //     ? -gridDimensions.gridHeight\n  //     : options.position === 'left'\n  //     ? gridDimensions.gridWidth\n  //     : options.position === 'top'\n  //     ? gridDimensions.gridHeight\n  //     : -gridDimensions.gridWidth\n\n  // // const directionMultiplier =\n  // //   options.position === 'top' || options.position === 'left' ? -1 : 1\n\n  // const transform = !isVertical ? translateX : translateY\n\n  // const tickSpacing = Math.max(options.tickSizeInner, 0) + options.tickPadding\n\n  // Pass down the axis config (including the scale itself) for posterity\n}\n\nfunction buildTimeAxis<TDatum>(\n  options: ResolvedAxisOptions<AxisTimeOptions<TDatum>>,\n  series: Series<TDatum>[],\n  isVertical: boolean,\n  range: [number, number],\n  outerRange: [number, number]\n): AxisTime<TDatum> {\n  const scaleFn = options.scaleType === 'localTime' ? scaleTime : scaleUtc\n\n  // Now set the range\n  const scale = scaleFn(range)\n\n  const allDatums = series.map(d => d.datums).flat()\n\n  const [minValue, maxValue] = extent(allDatums, datum =>\n    options.getValue(datum.originalDatum)\n  )\n\n  if (minValue === undefined || maxValue === undefined) {\n    console.info({\n      options,\n      series,\n      range,\n      values: allDatums.map(d => options.getValue(d.originalDatum)),\n    })\n    throw new Error('Invalid scale min/max')\n  }\n\n  // Set the domain\n  scale.domain([minValue, maxValue])\n\n  if (typeof options.hardMin === 'number') {\n    scale.domain([options.hardMin, Number(scale.domain()[1])])\n  }\n  if (typeof options.hardMax === 'number') {\n    scale.domain([Number(scale.domain()[0]), options.hardMax])\n  }\n\n  if (options.invert) {\n    scale.domain(Array.from(scale.domain()).reverse())\n  }\n\n  scale.nice()\n\n  const outerScale = scale.copy().range(outerRange)\n\n  // Supplmentary band scale\n  const bandScale = buildImpliedBandScale(options, scale, series, range)\n\n  const defaultFormat = scale.tickFormat()\n\n  const formatters = {} as AxisTime<TDatum>['formatters']\n\n  const scaleFormat = (value: Date) =>\n    options.formatters?.scale?.(value, { ...formatters, scale: undefined }) ??\n    defaultFormat(value)\n\n  const tooltipFormat = (value: Date) =>\n    options.formatters?.tooltip?.(value, {\n      ...formatters,\n      tooltip: undefined,\n    }) ?? scaleFormat(value)\n\n  const cursorFormat = (value: Date) =>\n    options.formatters?.cursor?.(value, { ...formatters, cursor: undefined }) ??\n    tooltipFormat(value)\n\n  Object.assign(formatters, {\n    default: defaultFormat,\n    scale: scaleFormat,\n    tooltip: tooltipFormat,\n    cursor: cursorFormat,\n  })\n\n  return {\n    ...options,\n    axisFamily: 'time',\n    isVertical,\n    scale,\n    range,\n    outerScale,\n    bandScale,\n    formatters: formatters,\n  }\n}\n\nfunction buildLinearAxis<TDatum>(\n  options: ResolvedAxisOptions<AxisLinearOptions<TDatum>>,\n  series: Series<TDatum>[],\n  isVertical: boolean,\n  range: [number, number],\n  outerRange: [number, number]\n): AxisLinear<TDatum> {\n  const scale = options.scaleType === 'log' ? scaleLog() : scaleLinear()\n\n  const allDatums = series.map(d => d.datums).flat(2)\n\n  const [minValue, maxValue] = options.stacked\n    ? extent(\n        (series\n          .map(s => s.datums.map(datum => datum.stackData ?? []))\n          .flat(2) as unknown) as number[]\n      )\n    : extent(allDatums, datum => options.getValue(datum.originalDatum))\n\n  if (minValue === undefined || maxValue === undefined) {\n    console.info({\n      options,\n      series,\n      range,\n      values: allDatums.map(d => options.getValue(d.originalDatum)),\n    })\n    throw new Error('Invalid scale min/max')\n  }\n\n  // Set the domain\n  scale.domain([minValue, maxValue])\n\n  if (typeof options.hardMin === 'number') {\n    scale.domain([options.hardMin, Number(scale.domain()[1])])\n  }\n  if (typeof options.hardMax === 'number') {\n    scale.domain([Number(scale.domain()[0]), options.hardMax])\n  }\n\n  if (options.invert) {\n    scale.domain(Array.from(scale.domain()).reverse())\n  }\n\n  scale.range(range)\n\n  scale.nice()\n\n  const outerScale = scale.copy().range(outerRange)\n\n  const bandScale = buildImpliedBandScale(options, scale, series, range)\n\n  const defaultFormat = scale.tickFormat()\n\n  const formatters = {} as AxisLinear<TDatum>['formatters']\n\n  const scaleFormat = (value: number) =>\n    options.formatters?.scale?.(value, { ...formatters, scale: undefined }) ??\n    defaultFormat(value)\n\n  const tooltipFormat = (value: number) =>\n    options.formatters?.tooltip?.(value, {\n      ...formatters,\n      tooltip: undefined,\n    }) ?? scaleFormat(value)\n\n  const cursorFormat = (value: number) =>\n    options.formatters?.cursor?.(value, { ...formatters, cursor: undefined }) ??\n    tooltipFormat(value)\n\n  Object.assign(formatters, {\n    default: defaultFormat,\n    scale: scaleFormat,\n    tooltip: tooltipFormat,\n    cursor: cursorFormat,\n  })\n\n  return {\n    ...options,\n    axisFamily: 'linear',\n    isVertical,\n    scale,\n    range,\n    outerScale,\n    bandScale,\n    formatters,\n  }\n}\n\nfunction buildBandAxis<TDatum>(\n  options: ResolvedAxisOptions<AxisBandOptions<TDatum>>,\n  series: Series<TDatum>[],\n  isVertical: boolean,\n  range: [number, number],\n  outerRange: [number, number]\n): AxisBand<TDatum> {\n  const domain = Array.from(\n    new Set(\n      series\n        .map(d => d.datums)\n        .flat()\n        .map(datum => options.getValue(datum.originalDatum))\n    )\n  )\n\n  const scale = scaleBand(domain, range)\n    .round(false)\n    .paddingOuter(options.outerBandPadding ?? 0)\n    .paddingInner(options.innerBandPadding ?? 0)\n\n  // Invert if necessary\n  if (options.invert) {\n    scale.domain(Array.from(scale.domain()).reverse())\n  }\n\n  const outerScale = scale.copy().range(outerRange)\n\n  const defaultFormat = (d: { toString: () => string }) => d\n\n  const formatters = {} as AxisBand<TDatum>['formatters']\n\n  const scaleFormat = (value: number) =>\n    options.formatters?.scale?.(value, { ...formatters, scale: undefined }) ??\n    defaultFormat(value)\n\n  const tooltipFormat = (value: number) =>\n    options.formatters?.tooltip?.(value, {\n      ...formatters,\n      tooltip: undefined,\n    }) ?? scaleFormat(value)\n\n  const cursorFormat = (value: number) =>\n    options.formatters?.cursor?.(value, { ...formatters, cursor: undefined }) ??\n    tooltipFormat(value)\n\n  Object.assign(formatters, {\n    default: defaultFormat,\n    scale: scaleFormat,\n    tooltip: tooltipFormat,\n    cursor: cursorFormat,\n  })\n\n  return {\n    ...options,\n    axisFamily: 'band',\n    isVertical,\n    scale,\n    range,\n    outerScale,\n    formatters,\n  }\n}\n\n//\n\nfunction buildImpliedBandScale<TDatum>(\n  options: ResolvedAxisOptions<AxisOptions<TDatum>>,\n  scale: ScaleTime<number, number, never> | ScaleLinear<number, number, never>,\n  series: Series<TDatum>[],\n  range: [number, number]\n) {\n  // Find the two closest points along axis\n\n  let impliedBandWidth: number = Math.max(...range)\n\n  series.forEach(serie => {\n    serie.datums.forEach(d1 => {\n      const one = scale(options.getValue(d1.originalDatum) ?? NaN)\n\n      serie.datums.forEach(d2 => {\n        const two = scale(options.getValue(d2.originalDatum) ?? NaN)\n\n        if (one === two) {\n          return\n        }\n\n        const r = [one, two].sort()\n\n        const diff = Math.abs(r[1] - r[0])\n\n        if (diff < impliedBandWidth) {\n          impliedBandWidth = diff\n        }\n      })\n    })\n  })\n\n  const bandRange = Math.max(...range)\n\n  const bandDomain = d3Range(bandRange / impliedBandWidth)\n\n  const bandScale = scaleBand(bandDomain, range)\n    .round(false)\n    .paddingOuter(options.outerBandPadding ?? 0)\n    .paddingInner(options.innerBandPadding ?? 0)\n\n  return bandScale\n}\n","import React, { MutableRefObject } from 'react'\n\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect'\nimport { Axis, GridDimensions, Position } from '../types'\nimport useChartContext from '../utils/chartContext'\n\nconst getElBox = (el: Element) => {\n  var rect = el.getBoundingClientRect()\n  return {\n    top: Math.round(rect.top),\n    right: Math.round(rect.right),\n    bottom: Math.round(rect.bottom),\n    left: Math.round(rect.left),\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n    x: Math.round(rect.x),\n    y: Math.round(rect.y),\n  }\n}\n\nexport default function useMeasure<TDatum>({\n  axis,\n  elRef,\n  gridDimensions,\n  setShowRotated,\n}: {\n  axis: Axis<TDatum>\n  elRef: MutableRefObject<SVGGElement | null>\n  gridDimensions: GridDimensions\n  showRotated: boolean\n  setShowRotated: (value: boolean) => void\n}) {\n  const { useAxisDimensionsAtom } = useChartContext<TDatum>()\n\n  const [axisDimensions, setAxisDimensions] = useAxisDimensionsAtom()\n\n  const axisDimension = React.useMemo(() => {\n    return axisDimensions[axis.position as Position]?.[axis.id!]\n  }, [axisDimensions, axis.position, axis.id])\n\n  // const isLooping = useIsLooping()\n\n  const measureRotation = React.useCallback(() => {\n    if (!elRef.current) {\n      return\n    }\n\n    let gridSize = !axis.isVertical\n      ? gridDimensions.gridWidth\n      : gridDimensions.gridHeight\n\n    const staticLabelDims = Array.from(\n      elRef.current.querySelectorAll('.Axis-Group.outer .tickLabel')\n    ).map(el => getElBox(el))\n\n    // Determine the largest labels on the axis\n    let widestLabel: typeof staticLabelDims[number] | undefined\n\n    staticLabelDims.forEach(label => {\n      let resolvedLabel = widestLabel ?? { width: 0 }\n      if (label.width > 0 && label.width > resolvedLabel.width) {\n        widestLabel = label\n      }\n    })\n\n    let smallestTickGap = gridSize\n\n    if (staticLabelDims.length > 1) {\n      staticLabelDims.forEach((current, i) => {\n        const prev = staticLabelDims[i - 1]\n\n        if (prev) {\n          smallestTickGap = Math.min(\n            smallestTickGap,\n            axis.isVertical ? current.top - prev.top : current.left - prev.left\n          )\n        }\n      })\n    }\n\n    const shouldRotate =\n      (widestLabel?.width || 0) + axis.minTickPaddingForRotation >\n      smallestTickGap\n\n    // if (!isLooping) {\n    // Rotate ticks for non-time horizontal axes\n    if (!axis.isVertical) {\n      setShowRotated(shouldRotate)\n    }\n    // }\n  }, [\n    elRef,\n    axis.isVertical,\n    axis.minTickPaddingForRotation,\n    gridDimensions.gridWidth,\n    gridDimensions.gridHeight,\n    setShowRotated,\n  ])\n\n  const measureDimensions = React.useCallback(() => {\n    if (!elRef.current) {\n      if (axisDimension) {\n        // If the entire axis is hidden, then we need to remove the axis dimensions\n        setAxisDimensions(old => {\n          const newAxes = { ...(old[axis.position] ?? {}) }\n\n          delete newAxes[axis.id!]\n\n          return {\n            ...old,\n            [axis.position]: newAxes,\n          }\n        })\n      }\n      return\n    }\n\n    const newDimensions = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    }\n\n    const domainEl = elRef.current.querySelector(`.Axis-Group.inner .domain`)\n\n    if (!domainEl) {\n      return\n    }\n\n    const domainDims = getElBox(domainEl)\n\n    const measureDims = Array.from(\n      elRef.current.querySelectorAll('.Axis-Group.inner .tickLabel')\n    ).map(el => getElBox(el))\n\n    // Determine the largest labels on the axis\n    let widestRealLabel = measureDims[0]\n    let tallestRealLabel = measureDims[0]\n\n    measureDims.forEach(d => {\n      if (d.width > 0 && d.width > widestRealLabel.width) {\n        widestRealLabel = d\n      }\n\n      if (d.height > 0 && d.height > tallestRealLabel.height) {\n        tallestRealLabel = d\n      }\n    })\n\n    // Axis overflow measurements\n    if (!axis.isVertical) {\n      if (measureDims.length) {\n        const leftMostLabelDim = measureDims.reduce((d, labelDim) =>\n          labelDim.left < d.left ? labelDim : d\n        )\n        const rightMostLabelDim = measureDims.reduce((d, labelDim) =>\n          labelDim.right > d.right ? labelDim : d\n        )\n\n        newDimensions.left = Math.round(\n          Math.max(0, domainDims.left - leftMostLabelDim?.left)\n        )\n\n        newDimensions.right = Math.round(\n          Math.max(0, rightMostLabelDim?.right - domainDims.right)\n        )\n      }\n\n      newDimensions.height = Math.round(\n        // Math.max(axis.tickSizeInner, axis.tickSizeOuter) +\n        8 + axis.minTickPaddingForRotation + (tallestRealLabel?.height ?? 0)\n      )\n    } else {\n      if (measureDims.length) {\n        const topMostLabelDim = measureDims.reduce((d, labelDim) =>\n          labelDim.top < d.top ? labelDim : d\n        )\n\n        const bottomMostLabelDim = measureDims.reduce((d, labelDim) =>\n          labelDim.bottom > d.bottom ? labelDim : d\n        )\n\n        newDimensions.top = Math.round(\n          Math.max(0, domainDims.top - topMostLabelDim?.top)\n        )\n\n        newDimensions.bottom = Math.round(\n          Math.max(0, bottomMostLabelDim?.bottom - domainDims.bottom)\n        )\n      }\n\n      newDimensions.width = Math.round(\n        // Math.max(axis.tickSizeInner, axis.tickSizeOuter) +\n        8 + axis.minTickPaddingForRotation + (widestRealLabel?.width ?? 0)\n      )\n    }\n\n    // Only update the axisDimensions if something has changed\n    if (\n      // !isLooping &&\n      !axisDimensions ||\n      !axisDimension ||\n      Object.keys(newDimensions).some(key => {\n        // @ts-ignore\n        return newDimensions[key] !== axisDimension[key]\n      })\n    ) {\n      setAxisDimensions(old => ({\n        ...old,\n        [axis.position]: {\n          ...(old[axis.position] ?? {}),\n          [axis.id!]: newDimensions,\n        },\n      }))\n    }\n  }, [\n    axis.id,\n    axis.isVertical,\n    axis.position,\n    axis.minTickPaddingForRotation,\n    axisDimension,\n    axisDimensions,\n    elRef,\n    setAxisDimensions,\n  ])\n\n  // Measure after if needed\n  useIsomorphicLayoutEffect(() => {\n    measureRotation()\n  }, [measureRotation])\n\n  useIsomorphicLayoutEffect(() => {\n    measureDimensions()\n  }, [measureRotation])\n}\n","import { ScaleLinear, ScaleTime } from 'd3-scale'\nimport React from 'react'\n\nimport { Axis, AxisTime } from '../types'\nimport { getTickPx, translate } from '../utils/Utils'\nimport useChartContext from '../utils/chartContext'\n//\nimport useMeasure from './AxisLinear.useMeasure'\n\nexport default function AxisLinearComp<TDatum>(axis: Axis<TDatum>) {\n  const [showRotated, setShowRotated] = React.useState(false)\n  const {\n    getOptions,\n    gridDimensions,\n    width,\n    height,\n  } = useChartContext<TDatum>()\n\n  const { dark, showDebugAxes } = getOptions()\n\n  const elRef = React.useRef<SVGGElement>(null)\n\n  useMeasure({\n    axis,\n    elRef,\n    gridDimensions,\n    showRotated,\n    setShowRotated,\n  })\n\n  const renderAxis = (isOuter: boolean) => {\n    const isRotated = !isOuter && showRotated\n\n    const scale = isOuter ? axis.outerScale : axis.scale\n    const [rangeStart, rangeEnd] = scale.range()\n\n    const getTicks = (\n      scale: ScaleTime<any, any> | ScaleLinear<any, any>,\n      num: number\n    ) => {\n      if (scale.ticks) {\n        return scale.ticks(num)\n      }\n\n      return scale.domain()\n    }\n\n    const resolvedHeight = isOuter ? height : gridDimensions.gridHeight\n    const resolvedWidth = isOuter ? width : gridDimensions.gridWidth\n\n    const [lineFrom, lineTo] =\n      axis.position === 'left'\n        ? [\n            { x: 0, y: rangeStart },\n            { x: 0, y: rangeEnd },\n          ]\n        : axis.position === 'right'\n        ? [\n            { x: resolvedWidth, y: rangeStart },\n            { x: resolvedWidth, y: rangeEnd },\n          ]\n        : axis.position === 'top'\n        ? [\n            { x: rangeStart, y: 0 },\n            { x: rangeEnd, y: 0 },\n          ]\n        : [\n            { x: rangeStart, y: resolvedHeight },\n            { x: rangeEnd, y: resolvedHeight },\n          ]\n\n    return (\n      <g\n        key={`Axis-Group ${isOuter ? 'outer' : 'inner'}`}\n        className={`Axis-Group ${isOuter ? 'outer' : 'inner'}`}\n        style={{\n          transform: isOuter\n            ? undefined\n            : translate(gridDimensions.gridX, gridDimensions.gridY),\n        }}\n      >\n        <g\n          className={`Axis`}\n          style={{\n            ...(isOuter\n              ? {\n                  opacity: showDebugAxes ? 0.5 : 0,\n                  pointerEvents: 'none',\n                }\n              : {\n                  opacity: 1,\n                  pointerEvents: 'all',\n                }),\n          }}\n        >\n          <line\n            className=\"domain\"\n            x1={lineFrom.x}\n            y1={lineFrom.y}\n            x2={lineTo.x}\n            y2={lineTo.y}\n            stroke={dark ? 'rgba(255,255,255, .2)' : 'rgba(0,0,0, .2)'}\n          />\n          {getTicks(scale as ScaleTime<any, any>, 10).map((tick, i) => {\n            const px = getTickPx(scale, tick)\n\n            const [tickFrom, tickTo, gridTo] =\n              axis.position === 'left'\n                ? [\n                    { x: 0, y: px },\n                    { x: -8, y: px },\n                    { x: resolvedWidth, y: px },\n                  ]\n                : axis.position === 'right'\n                ? [\n                    { x: resolvedWidth, y: px },\n                    { x: resolvedWidth + 8, y: px },\n                    { x: 0, y: px },\n                  ]\n                : axis.position === 'top'\n                ? [\n                    { x: px, y: 0 },\n                    { x: px, y: -8 },\n                    { x: px, y: resolvedHeight },\n                  ]\n                : [\n                    { x: px, y: resolvedHeight },\n                    { x: px, y: resolvedHeight + 8 },\n                    { x: px, y: 0 },\n                  ]\n\n            let { x: tickLabelX, y: tickLabelY } = tickTo\n\n            if (axis.position === 'top') {\n              tickLabelY -= 5\n            } else if (axis.position === 'bottom') {\n              tickLabelY += 5\n            } else if (axis.position === 'left') {\n              tickLabelX -= 5\n            } else if (axis.position === 'right') {\n              tickLabelX += 5\n            }\n\n            return (\n              <g key={`vx-tick-${tick}-${i}`} className={'tick'}>\n                {(axis.showGrid ?? true) && !isOuter ? (\n                  <line\n                    x1={tickFrom.x}\n                    y1={tickFrom.y}\n                    x2={gridTo.x}\n                    y2={gridTo.y}\n                    stroke={\n                      dark ? 'rgba(255,255,255, .05)' : 'rgba(0,0,0, .05)'\n                    }\n                  />\n                ) : null}\n                {!isOuter ? (\n                  <line\n                    x1={tickFrom.x}\n                    y1={tickFrom.y}\n                    x2={tickTo.x}\n                    y2={tickTo.y}\n                    stroke={dark ? 'rgba(255,255,255, .2)' : 'rgba(0,0,0, .2)'}\n                  />\n                ) : null}\n                <text\n                  className=\"tickLabel\"\n                  style={{\n                    fontSize: 10,\n                    fill: dark ? 'rgba(255,255,255, .7)' : 'rgba(0,0,0, .7)',\n                    dominantBaseline: isRotated\n                      ? 'central'\n                      : axis.position === 'bottom'\n                      ? 'hanging'\n                      : axis.position === 'top'\n                      ? 'alphabetic'\n                      : 'central',\n                    textAnchor: isRotated\n                      ? 'end'\n                      : axis.position === 'right'\n                      ? 'start'\n                      : axis.position === 'left'\n                      ? 'end'\n                      : 'middle',\n                  }}\n                  transform={`translate(${tickLabelX}, ${tickLabelY}) rotate(${\n                    isRotated ? (axis.position === 'top' ? 60 : -60) : 0\n                  })`}\n                >\n                  {(axis as AxisTime<any>).formatters.scale(tick as Date)}\n                </text>\n              </g>\n            )\n          })}\n        </g>\n      </g>\n    )\n  }\n\n  return axis.show ? (\n    <g ref={elRef}>\n      {renderAxis(false)}\n      {renderAxis(true)}\n    </g>\n  ) : null\n}\n","import React from 'react'\n\nexport default function useLatestWhen<T>(obj: T, when: boolean = true) {\n  const ref = React.useRef<T | null>(when ? obj : null)\n\n  if (when) {\n    ref.current = obj\n  }\n\n  return ref.current\n}\n","import * as React from 'react'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function usePortalElement() {\n  const [portalEl, setPortalEl] = React.useState<HTMLDivElement | null>()\n\n  useIsomorphicLayoutEffect(() => {\n    if (!portalEl) {\n      let element = document.getElementById(\n        'react-charts-portal'\n      ) as HTMLDivElement\n\n      if (!element) {\n        element = document.createElement('div')\n\n        element.setAttribute('id', 'react-charts-portal')\n\n        Object.assign(element.style, {\n          pointerEvents: 'none',\n          position: 'fixed',\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          'z-index': 99999999999,\n        })\n\n        document.body.append(element)\n      }\n\n      setPortalEl(element)\n    }\n  })\n\n  return portalEl\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as TSTB from 'ts-toolbelt'\n\nimport { animated, config, useSpring } from '@react-spring/web'\n\n// import useIsScrolling from '../hooks/useIsScrolling'\nimport useLatestWhen from '../hooks/useLatestWhen'\nimport usePortalElement from '../hooks/usePortalElement'\nimport { AxisTime, CursorOptions, Datum } from '../types'\nimport { translate } from '../utils/Utils'\n//\nimport useChartContext from '../utils/chartContext'\n\ntype ResolvedCursorOptions = TSTB.Object.Required<\n  CursorOptions,\n  'show' | 'showLine' | 'showLabel'\n>\n\n//\n\nconst getLineBackgroundColor = (dark?: boolean) =>\n  dark ? 'rgba(255,255,255,.3)' : 'rgba(0, 26, 39, 0.3)'\n\nconst getBackgroundColor = (dark?: boolean) =>\n  dark ? 'rgba(255,255,255,.9)' : 'rgba(0, 26, 39, 0.9)'\n\nfunction defaultCursor(options: CursorOptions): ResolvedCursorOptions {\n  return {\n    ...options,\n    show: options.show ?? true,\n    showLine: options.showLine ?? true,\n    showLabel: options.showLabel ?? true,\n  }\n}\n\nexport default function Cursors<TDatum>() {\n  const { getOptions } = useChartContext<TDatum>()\n\n  let primaryOptions = getOptions().primaryCursor ?? true\n  let secondaryOptions = getOptions().secondaryCursor ?? true\n\n  const resolvedPrimaryOptions = React.useMemo(\n    () =>\n      defaultCursor(\n        !primaryOptions\n          ? { show: false }\n          : typeof primaryOptions === 'boolean'\n          ? {}\n          : primaryOptions\n      ),\n    [primaryOptions]\n  )\n\n  const resolvedSecondaryOptions = React.useMemo(\n    () =>\n      defaultCursor(\n        !secondaryOptions\n          ? { show: false }\n          : typeof secondaryOptions === 'boolean'\n          ? {}\n          : secondaryOptions\n      ),\n    [secondaryOptions]\n  )\n\n  return (\n    <>\n      <Cursor primary options={resolvedPrimaryOptions} />\n      <Cursor options={resolvedSecondaryOptions} />\n    </>\n  )\n}\n\nfunction Cursor<TDatum>(props: {\n  primary?: boolean\n  options: ResolvedCursorOptions\n}) {\n  const {\n    getOptions,\n    svgRect,\n    gridDimensions,\n    useFocusedDatumAtom,\n    primaryAxis,\n    secondaryAxes,\n  } = useChartContext<TDatum>()\n\n  const [focusedDatum] = useFocusedDatumAtom()\n  const latestFocusedDatum = useLatestWhen(focusedDatum, !!focusedDatum)\n\n  const secondaryAxis = secondaryAxes.find(\n    d => d.id === props.options.axisId || latestFocusedDatum?.secondaryAxisId\n  )!\n\n  const axis = props.primary ? primaryAxis : secondaryAxis\n\n  const siblingAxis = props.primary ? secondaryAxis : primaryAxis\n\n  const resolveValue = (d: Datum<TDatum> | null) =>\n    props.options.value ??\n    (d\n      ? axis.stacked\n        ? d.stackData?.[1]\n        : axis.getValue(d?.originalDatum)\n      : undefined)\n\n  const value = resolveValue(focusedDatum)\n  const latestValue = resolveValue(latestFocusedDatum)\n\n  // Get the sibling range\n  const siblingRange = siblingAxis.scale.range()\n\n  let x\n  let y\n  let x1\n  let x2\n  let y1\n  let y2\n  let alignPctX\n  let alignPctY\n\n  const bandWidth = axis.axisFamily === 'band' ? axis.scale.bandwidth() : 1\n\n  const px = axis.scale(latestValue)\n\n  const show = typeof value !== 'undefined' && !Number.isNaN(value)\n\n  // Vertical alignment\n  if (axis.isVertical) {\n    y = px\n    y1 = (y ?? 0) - 1\n    y2 = (y ?? 0) + bandWidth\n    if (axis.position === 'left') {\n      x1 = siblingRange[0]\n      x2 = siblingRange[1]\n    } else {\n      x1 = siblingRange[1]\n      x2 = siblingRange[0]\n    }\n  } else {\n    x = px\n    x1 = (x ?? 0) - 1\n    x2 = (x ?? 0) + bandWidth\n    if (axis.position === 'top') {\n      y1 = siblingRange[0]\n      y2 = siblingRange[1]\n    } else {\n      y1 = siblingRange[1]\n      y2 = siblingRange[0]\n    }\n  }\n\n  const lineStartX = Math.min(x1, x2)\n  const lineStartY = Math.min(y1, y2)\n  const lineEndX = Math.max(x1, x2)\n  const lineEndY = Math.max(y1, y2)\n  const lineHeight = Math.max(lineEndY - lineStartY, 0)\n  const lineWidth = Math.max(lineEndX - lineStartX, 0)\n\n  let bubbleX\n  let bubbleY\n\n  // Bubble placement\n  if (axis.isVertical) {\n    if (axis.position === 'left') {\n      bubbleX = lineStartX\n    } else {\n      bubbleX = lineEndX\n    }\n\n    bubbleY = lineStartY + lineHeight / 2\n  } else {\n    if (axis.position === 'top') {\n      bubbleY = lineStartY\n    } else {\n      bubbleY = lineEndY\n    }\n\n    bubbleX = lineStartX + lineWidth / 2\n  }\n\n  // Bubble anchoring\n  if (axis.isVertical) {\n    alignPctY = -50\n    if (axis.position === 'left') {\n      alignPctX = -100\n    } else {\n      alignPctX = 0\n    }\n  } else {\n    alignPctX = -50\n    if (axis.position === 'top') {\n      alignPctY = -100\n    } else {\n      alignPctY = 0\n    }\n  }\n\n  const formattedValue = (axis as AxisTime<any>).formatters.cursor(latestValue)\n\n  // const isScrolling = useIsScrolling(200)\n\n  const lineSpring = useSpring({\n    transform: translate(lineStartX, lineStartY),\n    width: `${lineWidth}px`,\n    height: `${lineHeight}px`,\n    config: config.stiff,\n    // immediate: isScrolling,\n  })\n\n  const bubbleSpring = useSpring({\n    transform: translate(bubbleX, bubbleY),\n    config: config.stiff,\n    // immediate: isScrolling,\n  })\n\n  const portalEl = usePortalElement()\n\n  return portalEl\n    ? ReactDOM.createPortal(\n        <div\n          style={{\n            pointerEvents: 'none',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: translate(\n              svgRect.left + gridDimensions.gridX,\n              svgRect.top + gridDimensions.gridY\n            ),\n            opacity: show ? 1 : 0,\n            transition: 'all .3s ease',\n          }}\n          className=\"Cursor\"\n        >\n          {/* Render the cursor line */}\n          {props.options.showLine ? (\n            <animated.div\n              style={{\n                ...lineSpring,\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                background: getLineBackgroundColor(getOptions().dark),\n              }}\n            />\n          ) : null}\n          {/* Render the cursor bubble */}\n          {props.options.showLabel ? (\n            <animated.div\n              style={{\n                ...bubbleSpring,\n                position: 'absolute',\n                top: 0,\n                left: 0,\n              }}\n            >\n              {/* Render the cursor label */}\n              <div\n                style={{\n                  padding: '5px',\n                  fontSize: '10px',\n                  background: getBackgroundColor(getOptions().dark),\n                  color: getBackgroundColor(!getOptions().dark),\n                  borderRadius: '3px',\n                  position: 'relative',\n                  transform: `translate3d(${alignPctX}%, ${alignPctY}%, 0)`,\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                {formattedValue}\n              </div>\n            </animated.div>\n          ) : null}\n        </div>,\n        portalEl\n      )\n    : null\n}\n","import React from 'react'\n\nimport useRect, { HasBoundingClientRect } from './useRect'\n\n//\n\n//\n\ntype AlignMode =\n  | 'center'\n  | 'start'\n  | 'end'\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'left'\n\ntype Side = 'left' | 'right' | 'top' | 'bottom'\ntype SideOption = Side | `${Side} ${AlignMode}`\ntype SideAlign = [Side, AlignMode]\n\ntype StartKey = 'left' | 'top'\ntype LengthKey = 'width' | 'height'\n\ntype Dims = {\n  left: number\n  top: number\n  right: number\n  bottom: number\n  width: number\n  height: number\n}\n\n// These are the keys used internally to look up and measure\n// different sides of a bounding box within another\nconst sideSchemas = {\n  left: {\n    side: 'left',\n    startKey: 'left',\n    lengthKey: 'width',\n    crossStartKey: 'top',\n    crossLengthKey: 'height',\n    fromEnd: false,\n  },\n  right: {\n    side: 'right',\n    startKey: 'left',\n    lengthKey: 'width',\n    crossStartKey: 'top',\n    crossLengthKey: 'height',\n    fromEnd: true,\n  },\n  top: {\n    side: 'top',\n    startKey: 'top',\n    lengthKey: 'height',\n    crossStartKey: 'left',\n    crossLengthKey: 'width',\n    fromEnd: false,\n  },\n  bottom: {\n    side: 'bottom',\n    startKey: 'top',\n    lengthKey: 'height',\n    crossStartKey: 'left',\n    crossLengthKey: 'width',\n    fromEnd: true,\n  },\n} as const\n\n// This is the final Tootlip component. It's a render prop\n// that lets you attach handlers to elements, and render a tooltip\n// anchored to them in relation to the parent portal container (either the only\n// one defined or the one referenced by Id).\nexport function useAnchor(options: {\n  show: boolean\n  useLargest?: boolean\n  side: SideOption | SideOption[]\n  portalEl: HasBoundingClientRect | null | undefined\n  anchorEl: HasBoundingClientRect | null | undefined\n  tooltipEl: HasBoundingClientRect | null | undefined\n}) {\n  const portalDims = useRect(options.portalEl, { enabled: options.show })\n  const anchorDims = useRect(options.anchorEl, { enabled: options.show })\n  const tooltipDims = useRect(options.tooltipEl, {\n    enabled: options.show,\n  })\n\n  const sides = React.useMemo(() => {\n    const preSides = Array.isArray(options.side) ? options.side : [options.side]\n    return preSides.map(alignStr => {\n      const [side, align = 'center'] = alignStr.split(' ') as [Side, AlignMode]\n      const incompatibleSide = !['top', 'right', 'bottom', 'left'].find(\n        d => side === d\n      )\n\n      if (incompatibleSide) {\n        throw new Error(\n          `react-sticker: \"${side}\" is not a valid side! Must be one of ['top', 'right', 'bottom', 'left'].`\n        )\n      }\n\n      const incompatibleAlign = ![\n        'center',\n        'start',\n        'end',\n        'top',\n        'right',\n        'bottom',\n        'left',\n      ].find(d => align === d)\n\n      if (incompatibleAlign) {\n        throw new Error(\n          `react-sticker: \"${align}\" is not a valid side-alignment! Must be one of ['center', 'start', 'end', 'top', 'right', 'bottom', 'left'].`\n        )\n      }\n\n      return [side, align] as [Side, AlignMode]\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(options.side)])\n\n  // IF we have all of the dimensions needed to calculate\n  // fits, then calculate the fit\n  const ready = portalDims && tooltipDims && anchorDims\n\n  const fit = React.useMemo(\n    () =>\n      ready\n        ? fitOnBestSide({\n            portalDims,\n            tooltipDims,\n            anchorDims,\n            sides,\n            useLargest: options.useLargest,\n          })\n        : null,\n    [anchorDims, options.useLargest, portalDims, ready, sides, tooltipDims]\n  )\n\n  return {\n    fit,\n    style: {\n      position: 'absolute' as const,\n      visibility: ready ? ('visible' as const) : ('hidden' as const),\n      // The fit styles are applied here from the best fit\n      ...fit?.style,\n    },\n  }\n}\n\n// This function selects the best side for the tooltip by using\n// the ranked fits.\nfunction fitOnBestSide({\n  portalDims,\n  tooltipDims,\n  anchorDims,\n  sides,\n  useLargest,\n}: {\n  portalDims: Dims\n  tooltipDims: Dims\n  anchorDims: Dims\n  sides: SideAlign[]\n  useLargest?: boolean\n}) {\n  const fits = sides.map(([side, align]) =>\n    measureFit({\n      ...sideSchemas[side],\n      align,\n      portalDims,\n      tooltipDims,\n      anchorDims,\n    })\n  )\n\n  if (useLargest) {\n    fits.sort((a, b) => b.fitRatio - a.fitRatio)\n    return fits[0]\n  }\n\n  return fits.find(fit => fit.fitRatio >= 1) || fits[0]\n}\n\n// This function takes a side and bunch of calculated dimensions from\n// the portal, tooltip and target. Then it returns\n// the percentage fit and the style to achieve this specific fit\nfunction measureFit({\n  side,\n  align,\n  startKey,\n  lengthKey,\n  crossStartKey,\n  crossLengthKey,\n  fromEnd,\n  portalDims,\n  tooltipDims,\n  anchorDims,\n}: {\n  side: Side\n  align: AlignMode\n  startKey: StartKey\n  lengthKey: LengthKey\n  crossStartKey: StartKey\n  crossLengthKey: LengthKey\n  fromEnd: boolean\n  portalDims: Dims\n  tooltipDims: Dims\n  anchorDims: Dims\n}) {\n  const parentStart = portalDims[startKey]\n  const parentLength = portalDims[lengthKey]\n  const crossParentStart = portalDims[crossStartKey]\n  const crossParentLength = portalDims[crossLengthKey]\n  const anchorStart = anchorDims[startKey] - portalDims[startKey]\n  const anchorLength = anchorDims[lengthKey]\n  const crossAnchorStart = anchorDims[crossStartKey]\n  const crossAnchorLength = anchorDims[crossLengthKey]\n  const crossAnchorWidth = anchorDims[crossLengthKey]\n  const targetLength = tooltipDims[lengthKey]\n  const crossTargetLength = tooltipDims[crossLengthKey]\n\n  let targetStart: number\n  let fitRatio: number\n\n  if (!fromEnd) {\n    targetStart = anchorStart - targetLength\n    fitRatio = Math.min(anchorStart / targetLength)\n  } else {\n    targetStart = anchorStart + anchorLength\n    fitRatio = (parentLength - (anchorStart + anchorLength)) / targetLength\n  }\n\n  targetStart = Math.max(parentStart, Math.min(targetStart, parentLength))\n\n  let crossTargetStart: number\n\n  if (startKey === 'left') {\n    if (align === 'top') {\n      align = 'start'\n    } else if (align === 'bottom') {\n      align = 'end'\n    }\n  } else {\n    if (align === 'left') {\n      align = 'start'\n    } else if (align === 'right') {\n      align = 'end'\n    }\n  }\n\n  if (!['start', 'center', 'end'].includes(align)) {\n    align = 'center'\n  }\n\n  if (align === 'start') {\n    crossTargetStart = crossAnchorStart\n  } else if (align === 'end') {\n    crossTargetStart = crossAnchorStart + crossAnchorWidth - crossTargetLength\n  } else {\n    crossTargetStart =\n      crossAnchorStart + crossAnchorLength / 2 - crossTargetLength / 2\n  }\n\n  crossTargetStart = Math.max(\n    crossParentStart,\n    Math.min(crossTargetStart, crossParentLength - crossTargetLength)\n  )\n\n  return {\n    side,\n    align,\n    startKey,\n    lengthKey,\n    crossStartKey,\n    crossLengthKey,\n    fromEnd,\n    portalDims,\n    tooltipDims,\n    anchorDims,\n    fitRatio,\n    style: {\n      [startKey]: targetStart,\n      [crossStartKey]: crossTargetStart,\n    } as Record<StartKey, number>,\n  }\n}\n","import React from 'react'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function usePrevious<T>(val: T) {\n  const ref = React.useRef<T>()\n\n  useIsomorphicLayoutEffect(() => {\n    ref.current = val\n  }, [val])\n\n  return ref.current\n}\n","import { sum } from 'd3-array'\nimport React, { CSSProperties } from 'react'\n\nimport { useAnchor } from '../hooks/useAnchor'\nimport { Axis, AxisTime, Datum, RequiredChartOptions } from '../types'\n\n//\n//\n\nconst showCount = 10\n\nconst triangleSize = 7\n\nconst getBackgroundColor = (dark?: boolean) =>\n  dark ? 'rgba(255,255,255,.9)' : 'rgba(0, 26, 39, 0.9)'\n\nexport type TooltipRendererProps<TDatum> = {\n  focusedDatum: Datum<TDatum> | null\n  getOptions: () => RequiredChartOptions<TDatum>\n  primaryAxis: Axis<TDatum>\n  secondaryAxis: Axis<TDatum>\n  getDatumStyle: (datum: Datum<TDatum>) => CSSProperties\n  anchorFit: ReturnType<typeof useAnchor>\n}\n\nexport default function TooltipRenderer<TDatum>(\n  props: TooltipRendererProps<TDatum>\n) {\n  if (!props.focusedDatum) {\n    return null\n  }\n\n  const { primaryAxis, secondaryAxis, getDatumStyle, focusedDatum } = props\n\n  const { groupingMode, dark } = props.getOptions()\n\n  const groupDatums = props.focusedDatum?.group ?? []\n\n  const resolvedShowCount = showCount % 2 === 0 ? showCount : showCount + 1\n  const length = groupDatums.length\n\n  // Get the focused series' index\n  const activeIndex = groupDatums.findIndex(d => d === focusedDatum)\n  // Get the start by going back half of the showCount\n  let start = activeIndex > -1 ? activeIndex - resolvedShowCount / 2 : 0\n  // Make sure it's at least 0\n  start = Math.max(start, 0)\n  // Use the start and add the showCount to get the end\n  let end = activeIndex > -1 ? start + resolvedShowCount : length\n  // Don't let the end go passed the length\n  end = Math.min(end, length)\n  // Double check we aren't clipping the start\n  start = Math.max(end - resolvedShowCount, 0)\n  // Slice the datums by start and end\n  const visibleSortedGroupDatums = groupDatums.slice(start, end)\n  // Detect if we have previous items\n  const hasPrevious = start > 0\n  // Or next items\n  const hasNext = end < length\n\n  const finalAlign = `${props.anchorFit.fit?.side}-${props.anchorFit.fit?.align}`\n\n  let arrowPosition\n  let triangleStyles\n\n  if (!arrowPosition) {\n    if (finalAlign === 'left-center') {\n      arrowPosition = 'right'\n    } else if (finalAlign === 'right-center') {\n      arrowPosition = 'left'\n    } else if (finalAlign === 'top-center') {\n      arrowPosition = 'bottom'\n    } else if (finalAlign === 'bottom-center') {\n      arrowPosition = 'top'\n    } else if (finalAlign === 'right-start') {\n      arrowPosition = 'bottomLeft'\n    } else if (finalAlign === 'right-end') {\n      arrowPosition = 'topLeft'\n    } else if (finalAlign === 'left-start') {\n      arrowPosition = 'bottomRight'\n    } else if (finalAlign === 'left-end') {\n      arrowPosition = 'topRight'\n    }\n  }\n\n  const backgroundColor = getBackgroundColor(dark)\n\n  if (arrowPosition === 'bottom') {\n    triangleStyles = {\n      top: '100%',\n      left: '50%',\n      transform: 'translate3d(-50%, 0%, 0)',\n      borderLeft: `${triangleSize * 0.8}px solid transparent`,\n      borderRight: `${triangleSize * 0.8}px solid transparent`,\n      borderTop: `${triangleSize}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'top') {\n    triangleStyles = {\n      top: '0%',\n      left: '50%',\n      transform: 'translate3d(-50%, -100%, 0)',\n      borderLeft: `${triangleSize * 0.8}px solid transparent`,\n      borderRight: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'right') {\n    triangleStyles = {\n      top: '50%',\n      left: '100%',\n      transform: 'translate3d(0%, -50%, 0)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderLeft: `${triangleSize}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'left') {\n    triangleStyles = {\n      top: '50%',\n      left: '0%',\n      transform: 'translate3d(-100%, -50%, 0)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderRight: `${triangleSize}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'topRight') {\n    triangleStyles = {\n      top: '0%',\n      left: '100%',\n      transform: 'translate3d(-50%, -50%, 0) rotate(-45deg)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderLeft: `${triangleSize * 2}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'bottomRight') {\n    triangleStyles = {\n      top: '100%',\n      left: '100%',\n      transform: 'translate3d(-50%, -50%, 0) rotate(45deg)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderLeft: `${triangleSize * 2}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'topLeft') {\n    triangleStyles = {\n      top: '0%',\n      left: '0%',\n      transform: 'translate3d(-50%, -50%, 0) rotate(45deg)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderRight: `${triangleSize * 2}px solid ${backgroundColor}`,\n    }\n  } else if (arrowPosition === 'bottomLeft') {\n    triangleStyles = {\n      top: '100%',\n      left: '0%',\n      transform: 'translate3d(-50%, -50%, 0) rotate(-45deg)',\n      borderTop: `${triangleSize * 0.8}px solid transparent`,\n      borderBottom: `${triangleSize * 0.8}px solid transparent`,\n      borderRight: `${triangleSize * 2}px solid ${backgroundColor}`,\n    }\n  } else {\n    triangleStyles = {\n      opacity: 0,\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        fontSize: '10px',\n        padding: '5px',\n        background: getBackgroundColor(dark),\n        color: dark ? 'black' : 'white',\n        borderRadius: '3px',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          width: 0,\n          height: 0,\n          ...triangleStyles,\n        }}\n      />\n      <div>\n        <div\n          style={{\n            marginBottom: '3px',\n            textAlign: 'center',\n          }}\n        >\n          {groupingMode === 'series' ? (\n            <strong>{focusedDatum.seriesLabel}</strong>\n          ) : groupingMode === 'secondary' ? (\n            <strong>\n              {(secondaryAxis as AxisTime<any>).formatters.tooltip(\n                secondaryAxis.getValue(focusedDatum.originalDatum)\n              )}\n            </strong>\n          ) : (\n            <strong>\n              {(primaryAxis as AxisTime<any>).formatters.tooltip(\n                primaryAxis.getValue(focusedDatum.originalDatum)\n              )}\n            </strong>\n          )}\n        </div>\n        <table\n          style={{\n            whiteSpace: 'nowrap',\n          }}\n        >\n          <tbody>\n            {hasPrevious ? (\n              <tr\n                style={{\n                  opacity: 0.8,\n                }}\n              >\n                <td />\n                <td>...</td>\n                <td />\n              </tr>\n            ) : null}\n            {visibleSortedGroupDatums.map((sortedDatum, i) => {\n              const active = sortedDatum === focusedDatum\n\n              return (\n                <tr\n                  key={i}\n                  style={{\n                    opacity: active ? 1 : 0.8,\n                    fontWeight: active ? 'bold' : undefined,\n                  }}\n                >\n                  <td\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <svg width=\"14\" height=\"14\">\n                      <circle\n                        cx=\"7\"\n                        cy=\"7\"\n                        r=\"5\"\n                        style={{\n                          ...getDatumStyle(sortedDatum),\n                          stroke: dark ? 'black' : 'white',\n                          strokeWidth: active ? 2 : 1,\n                        }}\n                      />\n                    </svg>\n                  </td>\n                  {groupingMode === 'series' ? (\n                    <React.Fragment>\n                      <td>\n                        {(primaryAxis as AxisTime<any>).formatters.tooltip(\n                          primaryAxis.getValue(sortedDatum.originalDatum)\n                        )}\n                        : &nbsp;\n                      </td>\n                      <td\n                        style={{\n                          textAlign: 'right',\n                        }}\n                      >\n                        {(secondaryAxis as AxisTime<any>).formatters.tooltip(\n                          secondaryAxis.getValue(sortedDatum.originalDatum)\n                        )}\n                      </td>\n                    </React.Fragment>\n                  ) : groupingMode === 'secondary' ? (\n                    <React.Fragment>\n                      <td>{sortedDatum.seriesLabel}: &nbsp;</td>\n                      <td\n                        style={{\n                          textAlign: 'right',\n                        }}\n                      >\n                        {(primaryAxis as AxisTime<any>).formatters.tooltip(\n                          primaryAxis.getValue(sortedDatum.originalDatum)\n                        )}\n                      </td>\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <td>{sortedDatum.seriesLabel}: &nbsp;</td>\n                      <td\n                        style={{\n                          textAlign: 'right',\n                        }}\n                      >\n                        {(secondaryAxis as AxisTime<any>).formatters.tooltip(\n                          secondaryAxis.getValue(sortedDatum.originalDatum)\n                        )}\n                      </td>\n                    </React.Fragment>\n                  )}\n                </tr>\n              )\n            })}\n            {hasNext ? (\n              <tr\n                style={{\n                  opacity: 0.8,\n                }}\n              >\n                <td />\n                <td>...</td>\n                <td />\n              </tr>\n            ) : null}\n            {secondaryAxis.stacked && (focusedDatum.group ?? []).length > 1 ? (\n              <tr>\n                <td\n                  style={{\n                    paddingTop: '5px',\n                  }}\n                >\n                  <div\n                    style={{\n                      width: '12px',\n                      height: '12px',\n                      backgroundColor: dark\n                        ? 'rgba(0, 26, 39, 0.3)'\n                        : 'rgba(255,255,255,.2)',\n                      borderRadius: '50px',\n                    }}\n                  />\n                </td>\n                <td\n                  style={{\n                    paddingTop: '5px',\n                  }}\n                >\n                  Total: &nbsp;\n                </td>\n                <td\n                  style={{\n                    paddingTop: '5px',\n                  }}\n                >\n                  {/* {secondaryAxis.format(\n                  [...focusedDatum.group].reverse()[0].totalValue,\n                  -1\n                )} */}\n                  {sum(focusedDatum.group ?? [], d =>\n                    secondaryAxis.getValue(d.originalDatum)\n                  )}\n                </td>\n              </tr>\n            ) : null}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { useSpring, animated } from '@react-spring/web'\n\nimport { useAnchor } from '../hooks/useAnchor'\n// import useIsScrolling from '../hooks/useIsScrolling'\nimport useLatestWhen from '../hooks/useLatestWhen'\nimport usePortalElement from '../hooks/usePortalElement'\nimport usePrevious from '../hooks/usePrevious'\nimport { Datum, ResolvedTooltipOptions, TooltipOptions } from '../types'\n//\nimport useChartContext from '../utils/chartContext'\nimport TooltipRenderer from './TooltipRenderer'\n\n//\n\nfunction defaultTooltip<TDatum>(\n  options: TooltipOptions<TDatum> = {}\n): ResolvedTooltipOptions<TDatum> {\n  return {\n    ...options,\n    align: options.align ?? 'auto',\n    alignPriority: options.alignPriority ?? [\n      'right',\n      'topRight',\n      'bottomRight',\n      'left',\n      'topLeft',\n      'bottomLeft',\n      'top',\n      'bottom',\n    ],\n    padding: options.padding ?? 5,\n    tooltipArrowPadding: options.tooltipArrowPadding ?? 7,\n    // anchor: options.anchor ?? 'closest',\n    render: options.render ?? TooltipRenderer,\n  }\n}\n\nexport default function Tooltip<TDatum>(): React.ReactPortal | null {\n  const {\n    useFocusedDatumAtom,\n    getOptions,\n    primaryAxis,\n    secondaryAxes,\n    getDatumStatusStyle,\n    // getSeriesStatusStyle,\n  } = useChartContext<TDatum>()\n\n  const [focusedDatum] = useFocusedDatumAtom()\n  const latestFocusedDatum = useLatestWhen(focusedDatum, !!focusedDatum)\n\n  const preTooltipOptions = getOptions().tooltip ?? true\n\n  const secondaryAxis =\n    secondaryAxes.find(d => d.id === latestFocusedDatum?.secondaryAxisId) ??\n    secondaryAxes[0]\n\n  const tooltipOptions = React.useMemo(\n    () =>\n      defaultTooltip(\n        typeof preTooltipOptions === 'boolean' ? {} : preTooltipOptions\n      ),\n    [preTooltipOptions]\n  )\n\n  let anchorRect: DOMRect | null = null\n\n  if (latestFocusedDatum) {\n    anchorRect = latestFocusedDatum.element?.getBoundingClientRect() ?? null\n  }\n\n  const portalEl = usePortalElement()\n\n  const [tooltipEl, setTooltipEl] = React.useState<HTMLDivElement | null>()\n\n  const translateX = anchorRect?.left ?? 0\n  const translateY = anchorRect?.top ?? 0\n  const width = anchorRect?.width ?? 0\n  const height = anchorRect?.height ?? 0\n\n  const boundingBox = React.useMemo(() => {\n    const box = {\n      x: translateY,\n      y: translateX,\n      top: translateY,\n      left: translateX,\n      bottom: translateY + width,\n      right: translateX + height,\n      width: width,\n      height: height,\n      toJSON: () => ({} as DOMRect),\n    }\n\n    box.toJSON = () => box\n\n    return box\n  }, [height, translateX, translateY, width])\n\n  const anchorEl = React.useMemo(\n    () => ({\n      getBoundingClientRect() {\n        return boundingBox\n      },\n    }),\n    [boundingBox]\n  )\n\n  // const isScrolling = useIsScrolling(200)\n\n  const anchorFit = useAnchor({\n    show: !!focusedDatum,\n    portalEl,\n    anchorEl,\n    tooltipEl,\n    side: ['right', 'left', 'top', 'bottom'],\n  })\n\n  const { visibility, ...anchorFitStyle } = anchorFit.style\n\n  const previousFocusedDatum = usePrevious(focusedDatum)\n  const previousAnchorFitStyle = usePrevious(anchorFitStyle)\n  const wasZero =\n    previousAnchorFitStyle?.left === 0 && previousAnchorFitStyle?.top === 0\n\n  const springProps = useSpring({\n    ...anchorFitStyle,\n    opacity: wasZero ? 0 : focusedDatum && anchorFit.fit ? 1 : 0,\n    config: { mass: 1, tension: 210, friction: 30 },\n    immediate: key => {\n      return (\n        // isScrolling ||\n        wasZero ||\n        (['left', 'top'].includes(key) &&\n          !previousFocusedDatum &&\n          !!focusedDatum)\n      )\n    },\n  })\n\n  const show = !!preTooltipOptions\n\n  return show && portalEl\n    ? ReactDOM.createPortal(\n        <animated.div style={springProps}>\n          <div\n            ref={el => setTooltipEl(el)}\n            style={{\n              fontFamily: 'sans-serif',\n              ...(anchorFit.fit?.startKey === 'left'\n                ? {\n                    padding: '0 10px',\n                  }\n                : {\n                    padding: '10px 0',\n                  }),\n            }}\n          >\n            {tooltipOptions.render({\n              getOptions,\n              focusedDatum: latestFocusedDatum,\n              primaryAxis,\n              secondaryAxis,\n              getDatumStyle: (datum: Datum<TDatum>) =>\n                getDatumStatusStyle(datum, focusedDatum),\n              anchorFit,\n            })}\n          </div>\n        </animated.div>,\n        portalEl\n      )\n    : null\n}\n","import React from 'react'\n\n//\nimport { Datum } from '../types'\nimport { translate } from '../utils/Utils'\nimport useChartContext from '../utils/chartContext'\n\nexport default function Voronoi<TDatum>() {\n  const { getOptions, useFocusedDatumAtom } = useChartContext<TDatum>()\n\n  const [, setFocusedDatum] = useFocusedDatumAtom()\n\n  const {\n    onFocusDatum,\n    onClickDatum,\n    tooltip,\n    primaryCursor,\n    secondaryCursor,\n    showVoronoi,\n    groupingMode,\n  } = getOptions()\n\n  const handleFocus = React.useCallback(\n    (datum: Datum<TDatum> | null) => {\n      onFocusDatum?.(datum)\n      setFocusedDatum(datum)\n    },\n    [onFocusDatum, setFocusedDatum]\n  )\n\n  const needsVoronoi =\n    onFocusDatum ||\n    onClickDatum ||\n    tooltip ||\n    primaryCursor ||\n    secondaryCursor ||\n    showVoronoi\n\n  // Don't render until we have all dependencies\n  if (!needsVoronoi) {\n    return null\n  }\n\n  const props = {\n    handleFocus,\n  }\n\n  if (groupingMode === 'primary') {\n    return <PrimaryVoronoi {...props} />\n  }\n\n  return null\n\n  // return <ClosestVoronoi {...props} />\n}\n\nfunction PrimaryVoronoi<TDatum>({\n  handleFocus,\n}: {\n  handleFocus: (datum: Datum<TDatum> | null) => void\n}) {\n  const {\n    primaryAxis,\n    series,\n    secondaryAxes,\n    getOptions,\n    gridDimensions,\n    groupedDatums,\n  } = useChartContext<TDatum>()\n\n  return React.useMemo(() => {\n    const columns = series[0].datums.map((datum, i) => {\n      const prev = series[0].datums[i - 1]\n      const next = series[0].datums[i + 1]\n\n      const primaryValue = primaryAxis.getValue(datum.originalDatum)\n      const primaryPx = primaryAxis?.scale(primaryValue) ?? NaN\n\n      let range = primaryAxis?.scale.range() ?? [0, 0]\n\n      if (primaryAxis?.isVertical) {\n        range.reverse()\n      }\n\n      let [primaryStart, primaryEnd] = range\n\n      if (prev) {\n        const prevPx =\n          primaryAxis?.scale(primaryAxis.getValue(prev.originalDatum)) ?? NaN\n        primaryStart = primaryPx - (primaryPx - prevPx) / 2\n      }\n\n      if (next) {\n        const nextPx =\n          primaryAxis?.scale(primaryAxis.getValue(next.originalDatum)) ?? NaN\n        primaryEnd = primaryPx + (nextPx - primaryPx) / 2\n      }\n\n      const datums = groupedDatums.get(`${primaryValue}`) ?? []\n\n      datums.sort((a, b) => {\n        const aAxis = secondaryAxes.find(d => d.id === a.secondaryAxisId)\n        const bAxis = secondaryAxes.find(d => d.id === b.secondaryAxisId)\n\n        const aPx =\n          aAxis?.scale(\n            aAxis.stacked ? a.stackData?.[1] : aAxis?.getValue(a.originalDatum)\n          ) ?? NaN\n        const bPx =\n          bAxis?.scale(\n            bAxis.stacked ? b.stackData?.[1] : bAxis?.getValue(b.originalDatum)\n          ) ?? NaN\n\n        return aPx - bPx\n      })\n\n      return {\n        primaryStart,\n        primaryEnd,\n        primaryPx,\n        datumBoundaries: datums.map((datum, i) => {\n          const prev = datums[i - 1]\n          const next = datums[i + 1]\n\n          const secondaryAxis = secondaryAxes.find(\n            d => d.id === datum.secondaryAxisId\n          )\n\n          if (secondaryAxis?.stacked) {\n            let range = secondaryAxis?.scale.range() ?? [0, 0]\n\n            if (secondaryAxis?.isVertical) {\n              range.reverse()\n            }\n\n            let [secondaryStart, secondaryEnd] = range\n\n            if (prev) {\n              secondaryStart =\n                secondaryAxis?.scale(datum.stackData?.[1] ?? NaN) ?? NaN\n            }\n\n            if (next) {\n              secondaryEnd =\n                secondaryAxis?.scale(datum.stackData?.[0] ?? NaN) ?? NaN\n            }\n\n            return {\n              secondaryStart,\n              secondaryEnd,\n              datum,\n            }\n          }\n\n          const value =\n            secondaryAxis?.scale(\n              secondaryAxis?.getValue(datum.originalDatum)\n            ) ?? NaN\n\n          let range = secondaryAxis?.scale.range() ?? [0, 0]\n\n          if (secondaryAxis?.isVertical) {\n            range.reverse()\n          }\n\n          let [secondaryStart, secondaryEnd] = range\n\n          if (prev) {\n            const prevAxis = secondaryAxes.find(\n              d => d.id === prev?.secondaryAxisId\n            )\n            const prevValue =\n              prevAxis?.scale(prevAxis?.getValue(prev.originalDatum)) ?? NaN\n            secondaryStart = value - (value - prevValue) / 2\n          }\n\n          if (next) {\n            const nextAxis = secondaryAxes.find(\n              d => d.id === next?.secondaryAxisId\n            )\n            const nextValue =\n              nextAxis?.scale(nextAxis?.getValue(next.originalDatum)) ?? NaN\n            secondaryEnd = value + (nextValue - value) / 2\n          }\n\n          return {\n            secondaryStart,\n            secondaryEnd,\n            datum,\n          }\n        }),\n      }\n    })\n\n    return (\n      <g\n        {...{\n          onMouseLeave: () => handleFocus(null),\n          style: {\n            transform: translate(gridDimensions.gridX, gridDimensions.gridY),\n          },\n        }}\n      >\n        {columns.map(column => {\n          return (\n            <React.Fragment key={column.primaryPx}>\n              {column.datumBoundaries.map(datumBoundary => {\n                const x1 = !primaryAxis.isVertical\n                  ? column.primaryStart\n                  : datumBoundary.secondaryStart\n                const x2 = !primaryAxis.isVertical\n                  ? column.primaryEnd\n                  : datumBoundary.secondaryEnd\n                const y1 = !primaryAxis.isVertical\n                  ? datumBoundary.secondaryStart\n                  : column.primaryStart\n                const y2 = !primaryAxis.isVertical\n                  ? datumBoundary.secondaryEnd\n                  : column.primaryEnd\n\n                const x = Math.min(x1, x2)\n                const y = Math.min(y1, y2)\n                const xEnd = Math.max(x1, x2)\n                const yEnd = Math.max(y1, y2)\n\n                const height = Math.max(yEnd - y, 0)\n                const width = Math.max(xEnd - x, 0)\n\n                return (\n                  <rect\n                    {...{\n                      key: `${column.primaryPx}_${datumBoundary.datum.seriesIndex}`,\n                      x,\n                      y,\n                      width,\n                      height,\n                      className: 'action-voronoi',\n                      onMouseEnter: () => handleFocus(datumBoundary.datum),\n                      style: {\n                        fill: randomFill(),\n                        opacity: getOptions().showVoronoi ? 1 : 0,\n                      },\n                    }}\n                  />\n                )\n              })}\n            </React.Fragment>\n          )\n        })}\n      </g>\n    )\n  }, [\n    getOptions,\n    gridDimensions.gridX,\n    gridDimensions.gridY,\n    groupedDatums,\n    handleFocus,\n    primaryAxis,\n    secondaryAxes,\n    series,\n  ])\n}\n\n// function ClosestVoronoi({\n//   stackData,\n//   extent,\n//   handleFocus,\n//   showVoronoi,\n// }: {\n//   stackData: Series[]\n//   extent: number[][]\n//   handleFocus: (datum: Datum | null) => void\n//   showVoronoi: boolean\n// }) {\n//   let polygons = null\n\n//   const voronoiData: { x: number; y: number; datum: Datum }[] = []\n\n//   stackData.forEach(series => {\n//     series.datums\n//       .filter(d => d.defined)\n//       .forEach(datum => {\n//         datum.boundingPoints.forEach(boundingPoint => {\n//           if (\n//             typeof datum.x !== 'number' ||\n//             typeof datum.y !== 'number' ||\n//             Number.isNaN(datum.y) ||\n//             Number.isNaN(datum.x)\n//           ) {\n//             return\n//           }\n//           voronoiData.push({\n//             x: boundingPoint.x,\n//             y: boundingPoint.y,\n//             datum,\n//           })\n//         })\n//       })\n//   })\n\n//   const delaunay = Delaunay.from(\n//     voronoiData,\n//     d => Math.max(d.x, 0),\n//     d => Math.max(d.y, 0)\n//   )\n\n//   const flatExtent = extent.flat().map(d => Math.max(d, 0))\n\n//   const voronoi = delaunay.voronoi(flatExtent)\n\n//   polygons = voronoi.cellPolygons()\n\n//   polygons = Array.from(polygons)\n\n//   return (\n//     <g>\n//       {polygons.map((points, i) => {\n//         const index = points.index\n//         const datum = voronoiData[index].datum\n//         const path = lineFn(points as any) || undefined\n//         return (\n//           <Path\n//             key={i}\n//             d={path}\n//             className=\"action-voronoi\"\n//             onMouseEnter={() => handleFocus(datum)}\n//             onMouseLeave={() => handleFocus(null)}\n//             style={{\n//               fill: randomFill(),\n//               opacity: showVoronoi ? 1 : 0,\n//             }}\n//           />\n//         )\n//       })}\n//     </g>\n//   )\n// }\n\nfunction randomFill() {\n  const r = randomHue(100, 200)\n  const g = randomHue(0, r)\n  const b = randomHue(0, g)\n\n  const colors = shuffle([r, g, b])\n\n  return `rgba(${colors.join(', ')}, .5)`\n}\n\nfunction randomHue(min = 0, max = 255) {\n  return Math.floor(min + Math.random() * Math.min(max, 255 - min))\n}\n\nfunction shuffle<T>(array: T[]): T[] {\n  var currentIndex = array.length,\n    randomIndex\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex--\n\n    // And swap it with the current element.\n    ;[array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ]\n  }\n\n  return array\n}\n","import { groups, sort } from 'd3-array'\nimport { stack, stackOffsetNone } from 'd3-shape'\nimport { atom, useAtom } from 'jotai'\nimport React, { ComponentPropsWithoutRef } from 'react'\n\nimport useGetLatest from '../hooks/useGetLatest'\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect'\nimport useRect from '../hooks/useRect'\nimport Area from '../seriesTypes/Area'\nimport Bar from '../seriesTypes/Bar'\nimport Line from '../seriesTypes/Line'\n//\nimport {\n  AxesInfo,\n  AxisDimension,\n  AxisDimensions,\n  ChartContextValue,\n  ChartOptions,\n  Datum,\n  GridDimensions,\n  Measurement,\n  RequiredChartOptions,\n  Series,\n  StackDatum,\n} from '../types'\nimport {\n  materializeStyles,\n  getSeriesStatus,\n  getDatumStatus,\n} from '../utils/Utils'\nimport buildAxisLinear from '../utils/buildAxis.linear'\nimport { ChartContextProvider } from '../utils/chartContext'\nimport AxisLinear from './AxisLinear'\n// import Brush from './Brush'\nimport Cursors from './Cursors'\nimport Tooltip from './Tooltip'\nimport Voronoi from './Voronoi'\n\n//\n\n//\n\nconst defaultColorScheme = [\n  '#0f83ab',\n  '#faa43a',\n  '#ff4e4e',\n  '#53cfc9',\n  '#a2d925',\n  '#decf3f',\n  '#734fe9',\n  '#cd82ad',\n  '#006d92',\n  '#de7c00',\n  '#f33232',\n  '#3f9a80',\n  '#53c200',\n  '#d7af00',\n  '#4c26c9',\n  '#d44d99',\n]\n\nfunction defaultChartOptions<TDatum>(\n  options: ChartOptions<TDatum>\n): RequiredChartOptions<TDatum> {\n  return {\n    ...options,\n    initialWidth: options.initialWidth ?? 300,\n    initialHeight: options.initialHeight ?? 200,\n    getSeriesStyle: options.getSeriesStyle ?? (() => ({})),\n    getDatumStyle: options.getDatumStyle ?? (() => ({})),\n    getSeriesOrder:\n      options.getSeriesOrder ?? ((series: Series<TDatum>[]) => series),\n    groupingMode: options.groupingMode ?? 'primary',\n    showVoronoi: options.showVoronoi ?? false,\n    defaultColors: options.defaultColors ?? defaultColorScheme,\n  }\n}\n\nexport function Chart<TDatum>({\n  options: userOptions,\n  className,\n  style = {},\n  ...rest\n}: ComponentPropsWithoutRef<'div'> & { options: ChartOptions<TDatum> }) {\n  const options = defaultChartOptions(userOptions)\n  const [\n    containerElement,\n    setContainerElement,\n  ] = React.useState<HTMLDivElement | null>(null)\n  const parentElement = containerElement?.parentElement\n\n  const { width, height } = useRect(parentElement, options)\n\n  useIsomorphicLayoutEffect(() => {\n    if (parentElement) {\n      const computed = window.getComputedStyle(parentElement)\n\n      if (!['relative', 'absolute', 'fixed'].includes(computed.display)) {\n        parentElement.style.position = 'relative'\n      }\n    }\n  }, [parentElement])\n\n  return (\n    <div\n      ref={setContainerElement}\n      {...rest}\n      className={`ReactChart ${className || ''}`}\n      style={{\n        ...style,\n        position: 'absolute',\n        width,\n        height,\n      }}\n    >\n      <ChartInner options={options} {...{ width, height }} />\n    </div>\n  )\n}\n\nfunction ChartInner<TDatum>({\n  options,\n  width,\n  height,\n}: {\n  options: RequiredChartOptions<TDatum>\n  width: number\n  height: number\n}) {\n  if (!options.primaryAxis) {\n    throw new Error('A primaryAxis is required')\n  }\n\n  if (!options.secondaryAxes.length) {\n    throw new Error('At least one secondaryAxis is required')\n  }\n\n  const svgRef = React.useRef<SVGSVGElement>(null)\n  const svgRect = useRect(svgRef.current)\n  const getOptions = useGetLatest(options)\n\n  const axisDimensionsAtom = React.useMemo(\n    () =>\n      atom<AxisDimensions>({\n        left: {},\n        right: {},\n        top: {},\n        bottom: {},\n      }),\n    []\n  )\n\n  const focusedDatumAtom = React.useMemo(\n    () => atom<Datum<TDatum> | null>(null),\n    []\n  )\n\n  const useAxisDimensionsAtom = React.useCallback(() => {\n    // eslint-disable-next-line\n    return useAtom(axisDimensionsAtom)\n  }, [axisDimensionsAtom])\n  const useFocusedDatumAtom = React.useCallback(() => {\n    // eslint-disable-next-line\n    return useAtom(focusedDatumAtom)\n  }, [focusedDatumAtom])\n\n  // useAtom<Datum<TDatum> | null>(focusedDatumAtom)\n\n  const [axisDimensions] = useAxisDimensionsAtom()\n  const [focusedDatum] = useFocusedDatumAtom()\n\n  const gridDimensions = React.useMemo((): GridDimensions => {\n    // Left\n    const [axesLeftWidth, axesLeftTop, axesLeftBottom] = ([\n      'width',\n      'top',\n      'bottom',\n    ] as Measurement[]).map(prop =>\n      sumAllDimensionProperties(axisDimensions.left, prop)\n    )\n\n    const [axesRightWidth, axesRightTop, axesRightBottom] = ([\n      'width',\n      'top',\n      'bottom',\n    ] as Measurement[]).map(prop =>\n      sumAllDimensionProperties(axisDimensions.right, prop)\n    )\n\n    const [axesTopHeight, axesTopLeft, axesTopRight] = ([\n      'height',\n      'left',\n      'right',\n    ] as Measurement[]).map(prop =>\n      sumAllDimensionProperties(axisDimensions.top, prop)\n    )\n\n    const [axesBottomHeight, axesBottomLeft, axesBottomRight] = ([\n      'height',\n      'left',\n      'right',\n    ] as Measurement[]).map(prop =>\n      sumAllDimensionProperties(axisDimensions.bottom, prop)\n    )\n\n    const gridX = Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft)\n    const gridY = Math.max(axesTopHeight, axesLeftTop, axesRightTop)\n    const gridWidth = Math.max(\n      0,\n      width -\n        Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft) -\n        Math.max(axesRightWidth, axesTopRight, axesBottomRight)\n    )\n    const gridHeight = Math.max(\n      0,\n      height -\n        Math.max(axesTopHeight, axesLeftTop, axesRightTop) -\n        Math.max(axesBottomHeight, axesLeftBottom, axesRightBottom)\n    )\n\n    return { gridX, gridY, gridWidth, gridHeight }\n  }, [width, height, axisDimensions])\n\n  const series = React.useMemo(() => {\n    const series: Series<TDatum>[] = []\n\n    for (\n      let seriesIndex = 0;\n      seriesIndex < options.data.length;\n      seriesIndex++\n    ) {\n      const originalSeries = options.data[seriesIndex]\n      const seriesId = originalSeries.id ?? seriesIndex + ''\n      const seriesLabel = originalSeries.label ?? `Series ${seriesIndex + 1}`\n      const secondaryAxisId = originalSeries.secondaryAxisId\n      const originalDatums = originalSeries.data\n      const datums = []\n\n      for (\n        let datumIndex = 0;\n        datumIndex < originalDatums.length;\n        datumIndex++\n      ) {\n        const originalDatum = originalDatums[datumIndex]\n        datums[datumIndex] = {\n          originalSeries,\n          seriesIndex,\n          seriesId,\n          seriesLabel,\n          secondaryAxisId,\n          index: datumIndex,\n          originalDatum,\n        }\n      }\n\n      series[seriesIndex] = {\n        originalSeries,\n        index: seriesIndex,\n        id: seriesId,\n        label: seriesLabel,\n        secondaryAxisId,\n        datums,\n      }\n    }\n\n    if (options.secondaryAxes.some(axisOptions => axisOptions.stacked)) {\n      options.secondaryAxes\n        .filter(d => d.stacked)\n        .forEach(secondaryAxis => {\n          const axisSeries = series.filter(\n            s => s.secondaryAxisId === secondaryAxis.id\n          )\n          const seriesIndices = Object.keys(axisSeries)\n          const stacker = stack()\n            .keys(seriesIndices)\n            .value((_, seriesIndex, index) => {\n              const val = secondaryAxis.getValue(\n                axisSeries[Number(seriesIndex)].datums[index].originalDatum\n              )\n\n              if (typeof val === 'undefined' || val === null) {\n                return 0\n              }\n\n              return val\n            })\n            .offset(secondaryAxis.stackOffset ?? stackOffsetNone)\n\n          const stacked = stacker(\n            Array.from({\n              length: axisSeries.sort(\n                (a, b) => b.datums.length - a.datums.length\n              )[0].datums.length,\n            })\n          )\n\n          stacked.forEach((s, sIndex) => {\n            s.forEach((datum, i) => {\n              // @ts-ignore\n              datum.data = axisSeries[sIndex].datums[i]\n\n              axisSeries[sIndex].datums[\n                i\n              ].stackData = (datum as unknown) as StackDatum<TDatum>\n            })\n          })\n        })\n    }\n\n    return series\n  }, [options.data, options.secondaryAxes])\n\n  const primaryAxis = React.useMemo(() => {\n    return buildAxisLinear<TDatum>(\n      options.primaryAxis,\n      series,\n      gridDimensions,\n      width,\n      height\n    )\n  }, [gridDimensions, height, options.primaryAxis, series, width])\n\n  const secondaryAxes = React.useMemo(() => {\n    return options.secondaryAxes.map(secondaryAxis => {\n      return buildAxisLinear<TDatum>(\n        secondaryAxis,\n        series,\n        gridDimensions,\n        width,\n        height\n      )\n    })\n  }, [gridDimensions, height, options.secondaryAxes, series, width])\n\n  const axesInfo: AxesInfo = React.useMemo(() => {\n    // Make sure we're mapping x and y to the correct axes\n    const xKey = primaryAxis.isVertical ? 'secondary' : 'primary'\n    const yKey = primaryAxis.isVertical ? 'primary' : 'secondary'\n\n    return {\n      xKey,\n      yKey,\n    }\n  }, [primaryAxis])\n\n  const groupedDatums = React.useMemo(() => {\n    const groupedDatums = new Map<any, Datum<TDatum>[]>()\n\n    const allDatums = series.map(s => s.datums).flat(2)\n\n    allDatums.forEach(datum => {\n      const primaryValue = `${primaryAxis.getValue(datum.originalDatum)}`\n\n      if (!groupedDatums.has(primaryValue)) {\n        groupedDatums.set(primaryValue, [])\n      }\n\n      groupedDatums.get(primaryValue)!.push(datum)\n    })\n\n    allDatums.forEach(datum => {\n      const primaryValue = `${primaryAxis.getValue(datum.originalDatum)}`\n\n      datum.group = groupedDatums.get(primaryValue)\n    })\n\n    return groupedDatums\n  }, [primaryAxis, series])\n\n  const getSeriesStatusStyle = React.useCallback(\n    (series: Series<TDatum>, focusedDatum: Datum<TDatum> | null) => {\n      const base = {\n        color: getOptions().defaultColors[\n          series.index % (getOptions().defaultColors.length - 1)\n        ],\n      }\n\n      const status = getSeriesStatus(series, focusedDatum)\n      const statusStyles = getOptions().getSeriesStyle(series, status)\n      series.style = materializeStyles(statusStyles, base)\n      return series.style\n    },\n    [getOptions]\n  )\n\n  const getDatumStatusStyle = React.useCallback(\n    (datum: Datum<TDatum>, focusedDatum: Datum<TDatum> | null) => {\n      const base = {\n        ...series[datum.seriesIndex].style,\n        color: getOptions().defaultColors[\n          datum.seriesIndex % (getOptions().defaultColors.length - 1)\n        ],\n      }\n\n      const status = getDatumStatus(datum as Datum<TDatum>, focusedDatum)\n      const statusStyles = getOptions().getDatumStyle(\n        datum as Datum<TDatum>,\n        status\n      )\n\n      datum.style = materializeStyles(statusStyles, base)\n\n      return datum.style\n    },\n    [getOptions, series]\n  )\n\n  // const mouseMoveRafRef = React.useRef<number | null>()\n\n  // const onMouseMove = (\n  //   e: React.MouseEvent<SVGSVGElement, MouseEvent> | MouseEvent\n  // ) => {\n  //   if (mouseMoveRafRef.current) {\n  //     Raf.cancel(mouseMoveRafRef.current)\n  //   }\n\n  //   mouseMoveRafRef.current = Raf(() => {\n  //     mouseMoveRafRef.current = null\n  //     const { clientX, clientY } = e\n\n  //     setPointer(old => {\n  //       const x = clientX - svgRect.left - gridDimensions.gridX\n  //       const y = clientY - svgRect.top - gridDimensions.gridY\n\n  //       return {\n  //         ...old,\n  //         svgHovered: true,\n  //         x,\n  //         y,\n  //       }\n  //     })\n  //   })\n  // }\n\n  // const onMouseUp = () => {\n  //   document.removeEventListener('mouseup', onMouseUp)\n  //   document.removeEventListener('mousemove', onMouseMove)\n\n  //   // if (options.brush?.onSelect && pointer.dragging) {\n  //   //   if (Math.abs(pointer.startX - pointer.x) >= 20) {\n  //   //     options.brush.onSelect({\n  //   //       pointer,\n  //   //       start: (axesInfo.primaryAxes[0].scale as ScaleLinear<\n  //   //         number,\n  //   //         number\n  //   //       >).invert(pointer.startX),\n  //   //       end: (axesInfo.primaryAxes[0].scale as ScaleLinear<\n  //   //         number,\n  //   //         number\n  //   //       >).invert(pointer.x),\n  //   //     })\n  //   //   }\n  //   // }\n\n  //   setPointer(\n  //     (old): Pointer => {\n  //       return {\n  //         ...old,\n  //         dragging: false,\n  //       }\n  //     }\n  //   )\n  // }\n\n  // const onMouseDown = () => {\n  //   document.addEventListener('mouseup', onMouseUp)\n  //   document.addEventListener('mousemove', onMouseMove)\n\n  //   setPointer(\n  //     (old): Pointer => {\n  //       return {\n  //         ...old,\n  //         startX: old.x,\n  //         startY: old.y,\n  //         dragging: true,\n  //       }\n  //     }\n  //   )\n  // }\n\n  // Reverse the stack order for proper z-indexing\n  const reversedSeries = [...series].reverse()\n  let orderedSeries = options.getSeriesOrder(reversedSeries)\n\n  // const focusedSeriesIndex = focusedDatum\n  //   ? orderedSeries.findIndex(series => series.id === focusedDatum.seriesId)\n  //   : -1\n\n  // Bring focused series to the front\n  // orderedSeries = focusedDatum\n  //   ? [\n  //       ...orderedSeries.slice(0, focusedSeriesIndex),\n  //       ...orderedSeries.slice(focusedSeriesIndex + 1),\n  //       orderedSeries[focusedSeriesIndex],\n  //     ]\n  //   : orderedSeries\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      svgRef.current &&\n      svgRef.current.parentElement &&\n      !svgRef.current.parentElement.style.position\n    ) {\n      svgRef.current.parentElement.style.position = 'relative'\n    }\n  })\n\n  const contextValue: ChartContextValue<TDatum> = {\n    getOptions,\n    gridDimensions,\n    primaryAxis,\n    secondaryAxes,\n    axesInfo,\n    series,\n    orderedSeries,\n    groupedDatums,\n    width,\n    height,\n    getSeriesStatusStyle,\n    getDatumStatusStyle,\n    useAxisDimensionsAtom,\n    useFocusedDatumAtom,\n    svgRect,\n  }\n\n  const seriesByAxisId = sort(\n    groups(orderedSeries, d => d.secondaryAxisId),\n    ([key]) => secondaryAxes.findIndex(axis => axis.id === key)\n  )\n\n  return (\n    <ChartContextProvider value={useGetLatest(contextValue)}>\n      <div\n        style={{\n          fontFamily: 'sans-serif',\n        }}\n      >\n        <svg\n          ref={svgRef}\n          style={{\n            width,\n            height,\n            overflow: options.brush ? 'hidden' : 'visible',\n          }}\n          // onMouseEnter={e => {\n          //   e.persist()\n          //   onMouseMove(e)\n          // }}\n          // onMouseMove={e => {\n          //   e.persist()\n          //   onMouseMove(e)\n          // }}\n          // onMouseLeave={e => {\n          //   e.persist()\n          //   setPointer(old => {\n          //     return {\n          //       ...old,\n          //       svgHovered: false,\n          //     }\n          //   })\n          // }}\n          // onMouseDown={e => {\n          //   e.persist()\n          //   onMouseDown()\n          // }}\n          onClick={e => options.onClickDatum?.(focusedDatum, e)}\n        >\n          <g\n            className=\"Series\"\n            style={{\n              pointerEvents: 'none',\n            }}\n          >\n            {seriesByAxisId.map(([axisId, series]) => {\n              const secondaryAxis = secondaryAxes.find(d => d.id === axisId)\n\n              if (!secondaryAxis) {\n                return null\n              }\n\n              const { elementType } = secondaryAxis\n              const Component = (() => {\n                if (elementType === 'line') {\n                  return Line\n                }\n                if (elementType === 'bar') {\n                  return Bar\n                }\n                if (elementType === 'area') {\n                  return Area\n                }\n                throw new Error('Invalid elementType')\n              })()\n\n              return (\n                <Component\n                  key={axisId ?? '__default__'}\n                  primaryAxis={primaryAxis}\n                  secondaryAxis={secondaryAxis}\n                  series={series}\n                />\n              )\n            })}\n          </g>\n          <g className=\"axes\">\n            {[primaryAxis, ...secondaryAxes].map(axis => (\n              <AxisLinear key={[axis.position, axis.id].join('')} {...axis} />\n            ))}\n          </g>\n          <Voronoi />\n          {options.renderSVG?.() ?? null}\n        </svg>\n        <Cursors />\n        <Tooltip />\n      </div>\n    </ChartContextProvider>\n  )\n}\n\nfunction sumAllDimensionProperties(\n  axisDimensions: Record<string, AxisDimension>,\n  side: Measurement\n) {\n  let sum = 0\n\n  Object.keys(axisDimensions).forEach(axisId => {\n    sum += axisDimensions[axisId]?.[side] || 0\n  })\n\n  return sum\n}\n"],"names":["useGetLatest","obj","ref","React","useRef","getterRef","current","window","useLayoutEffect","useEffect","useRect","node","options","enabled","useState","element","setElement","width","initialWidth","height","initialHeight","rect","setRect","useIsomorphicLayoutEffect","initialRectSet","getBoundingClientRect","observer","observeRect","observe","unobserve","getSeriesStatus","series","focusedDatum","seriesId","id","getDatumStatus","datum","group","some","groupDatum","normalizeColor","style","defaults","stroke","color","fill","elementTypes","materializeStyles","i","length","type","translate","x","y","Math","round","getSecondaries","secondaryAxis","stacked","scale","stackData","NaN","getValue","originalDatum","getPrimary","primaryAxis","primary","invert","axisFamily","getPrimaryLength","_datum","min","max","bandwidth","minBandSize","maxBandSize","bandScale","getSecondaryLength","secondary","sort","abs","getX","isVertical","getY","getWidth","getHeight","getTickPx","value","px","chartContext","ChartContextProvider","children","Provider","useChartContext","sign","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","prototype","areaStart","_line","areaEnd","lineStart","_t0","_point","lineEnd","lineTo","closePath","moveTo","MonotoneY","ReflectContext","Object","create","call","monotoneX","AreaComponent","allSeries","getSeriesStatusStyle","getDatumStatusStyle","useFocusedDatumAtom","gridDimensions","curve","xAxis","yAxis","isEnd","transform","gridX","gridY","map","lineStyle","strokeWidth","line","areaStyle","opacity","area","areaPath","datums","undefined","linePath","key","d","dataStyle","el","r","cx","cy","circle","showDatumElements","BarComponent","rectangle","pathDefaultStyle","Line","defaultAxisOptions","elementType","minTickPaddingForRotation","tickLabelRotationDeg","innerBandPadding","outerBandPadding","show","buildAxisLinear","userOptions","position","Error","indexOf","range","gridHeight","gridWidth","outerRange","scaleType","buildTimeAxis","buildLinearAxis","buildBandAxis","scaleFn","scaleTime","scaleUtc","allDatums","flat","extent","minValue","maxValue","console","info","values","domain","hardMin","Number","hardMax","Array","from","reverse","nice","outerScale","copy","buildImpliedBandScale","defaultFormat","tickFormat","formatters","scaleFormat","tooltipFormat","tooltip","cursorFormat","cursor","assign","scaleLog","scaleLinear","s","Set","scaleBand","paddingOuter","paddingInner","impliedBandWidth","forEach","serie","d1","one","d2","two","diff","bandRange","bandDomain","d3Range","getElBox","top","right","bottom","left","useMeasure","axis","elRef","setShowRotated","useAxisDimensionsAtom","axisDimensions","setAxisDimensions","axisDimension","useMemo","measureRotation","useCallback","gridSize","staticLabelDims","querySelectorAll","widestLabel","label","resolvedLabel","smallestTickGap","prev","shouldRotate","measureDimensions","old","newAxes","newDimensions","domainEl","querySelector","domainDims","measureDims","widestRealLabel","tallestRealLabel","leftMostLabelDim","reduce","labelDim","rightMostLabelDim","topMostLabelDim","bottomMostLabelDim","keys","AxisLinearComp","showRotated","getOptions","dark","showDebugAxes","renderAxis","isOuter","isRotated","rangeStart","rangeEnd","getTicks","num","ticks","resolvedHeight","resolvedWidth","lineFrom","className","pointerEvents","tick","tickFrom","tickTo","gridTo","tickLabelX","tickLabelY","showGrid","fontSize","dominantBaseline","textAnchor","useLatestWhen","when","usePortalElement","portalEl","setPortalEl","document","getElementById","createElement","setAttribute","body","append","getLineBackgroundColor","getBackgroundColor","defaultCursor","showLine","showLabel","Cursors","primaryOptions","primaryCursor","secondaryOptions","secondaryCursor","resolvedPrimaryOptions","resolvedSecondaryOptions","Cursor","props","svgRect","secondaryAxes","latestFocusedDatum","find","axisId","secondaryAxisId","siblingAxis","resolveValue","latestValue","siblingRange","alignPctX","alignPctY","bandWidth","isNaN","lineStartX","lineStartY","lineEndX","lineEndY","lineHeight","lineWidth","bubbleX","bubbleY","formattedValue","lineSpring","useSpring","config","stiff","bubbleSpring","ReactDOM","createPortal","transition","animated","div","background","padding","borderRadius","whiteSpace","sideSchemas","side","startKey","lengthKey","crossStartKey","crossLengthKey","fromEnd","useAnchor","portalDims","anchorDims","anchorEl","tooltipDims","tooltipEl","sides","preSides","isArray","alignStr","split","align","incompatibleSide","incompatibleAlign","JSON","stringify","ready","fit","fitOnBestSide","useLargest","visibility","fits","measureFit","a","b","fitRatio","parentStart","parentLength","crossParentStart","crossParentLength","anchorStart","anchorLength","crossAnchorStart","crossAnchorLength","crossAnchorWidth","targetLength","crossTargetLength","targetStart","crossTargetStart","includes","usePrevious","val","showCount","triangleSize","TooltipRenderer","getDatumStyle","groupingMode","groupDatums","resolvedShowCount","activeIndex","findIndex","start","end","visibleSortedGroupDatums","slice","hasPrevious","hasNext","finalAlign","anchorFit","arrowPosition","triangleStyles","backgroundColor","borderLeft","borderRight","borderTop","borderBottom","marginBottom","textAlign","seriesLabel","sortedDatum","active","fontWeight","display","alignItems","justifyContent","Fragment","paddingTop","sum","defaultTooltip","alignPriority","tooltipArrowPadding","render","Tooltip","preTooltipOptions","tooltipOptions","anchorRect","setTooltipEl","translateX","translateY","boundingBox","box","toJSON","anchorFitStyle","previousFocusedDatum","previousAnchorFitStyle","wasZero","springProps","mass","tension","friction","immediate","fontFamily","Voronoi","setFocusedDatum","onFocusDatum","onClickDatum","showVoronoi","handleFocus","needsVoronoi","PrimaryVoronoi","groupedDatums","columns","next","primaryValue","primaryPx","primaryStart","primaryEnd","prevPx","nextPx","get","aAxis","bAxis","aPx","bPx","datumBoundaries","secondaryStart","secondaryEnd","prevAxis","prevValue","nextAxis","nextValue","onMouseLeave","column","datumBoundary","xEnd","yEnd","seriesIndex","onMouseEnter","randomFill","randomHue","g","colors","shuffle","join","floor","random","array","currentIndex","randomIndex","defaultColorScheme","defaultChartOptions","getSeriesStyle","getSeriesOrder","defaultColors","Chart","rest","containerElement","setContainerElement","parentElement","computed","getComputedStyle","ChartInner","svgRef","axisDimensionsAtom","atom","focusedDatumAtom","useAtom","prop","sumAllDimensionProperties","axesLeftWidth","axesLeftTop","axesLeftBottom","axesRightWidth","axesRightTop","axesRightBottom","axesTopHeight","axesTopLeft","axesTopRight","axesBottomHeight","axesBottomLeft","axesBottomRight","data","originalSeries","originalDatums","datumIndex","index","axisOptions","filter","axisSeries","seriesIndices","stacker","stack","_","offset","stackOffset","stackOffsetNone","sIndex","axesInfo","xKey","yKey","Map","has","set","push","base","status","statusStyles","reversedSeries","orderedSeries","contextValue","seriesByAxisId","groups","overflow","brush","onClick","e","Component","Bar","Area","AxisLinear","renderSVG"],"mappings":"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"}