"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/es.weak-map.js");

require("core-js/modules/web.dom-collections.iterator.js");

require("core-js/modules/es.object.define-property.js");

require("core-js/modules/es.object.get-own-property-descriptor.js");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _inheritsLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _chai = require("chai");

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _ScrollReceiver2 = _interopRequireDefault(require("../ScrollReceiver"));

var _jsxRuntime = require("react/jsx-runtime");

var _div;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});
describe('Test ScrollReceiver', function () {
  var _ScrollReceiver;

  var TestEl = /*#__PURE__*/function (_PureComponent) {
    (0, _inheritsLoose2["default"])(TestEl, _PureComponent);

    function TestEl() {
      return _PureComponent.apply(this, arguments) || this;
    }

    var _proto = TestEl.prototype;

    _proto.render = function render() {
      return _div || (_div = /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {}));
    };

    return TestEl;
  }(_react.PureComponent);

  it('test simple ScrollReceiver', function () {
    var vDom = _ScrollReceiver || (_ScrollReceiver = /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollReceiver2["default"], {
      container: TestEl
    }));

    var uFake = (0, _enzyme.mount)(vDom);
    (0, _chai.expect)(uFake.html()).to.be.equal('<div></div>');
  });
});