"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/es.weak-map.js");

require("core-js/modules/web.dom-collections.iterator.js");

require("core-js/modules/es.object.define-property.js");

require("core-js/modules/es.object.get-own-property-descriptor.js");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

require("core-js/modules/web.timers.js");

require("core-js/modules/es.string.link.js");

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _smoothScrollTo = _interopRequireDefault(require("smooth-scroll-to"));

var _getoffset = _interopRequireDefault(require("getoffset"));

var _winDoc = require("win-doc");

var _index = require("../../src/index");

var _scrollStore = _interopRequireDefault(require("../../src/stores/scrollStore"));

var _fastScrollStore = _interopRequireDefault(require("../../src/stores/fastScrollStore"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["targetId", "scrollRefLoc", "scrollRefId", "scrollMargin", "style", "preventDefault", "noDelay"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var scollTimer = null;

var resetTimer = function resetTimer() {
  if (scollTimer) {
    clearTimeout(scollTimer);
    scollTimer = false;
  }
};

var useSmoothScrollLink = function useSmoothScrollLink(props) {
  var targetId = props.targetId,
      _props$scrollRefLoc = props.scrollRefLoc,
      scrollRefLoc = _props$scrollRefLoc === void 0 ? "bottom" : _props$scrollRefLoc,
      _props$scrollRefId = props.scrollRefId,
      scrollRefId = _props$scrollRefId === void 0 ? "" : _props$scrollRefId,
      scrollMargin = props.scrollMargin,
      style = props.style,
      _props$preventDefault = props.preventDefault,
      preventDefault = _props$preventDefault === void 0 ? true : _props$preventDefault,
      _props$noDelay = props.noDelay,
      noDelay = _props$noDelay === void 0 ? false : _props$noDelay,
      others = (0, _objectWithoutPropertiesLoose2["default"])(props, _excluded);

  var _useState = (0, _react.useState)(),
      scrollRefElement = _useState[0],
      setScrollRefElement = _useState[1];

  (0, _react.useEffect)(function () {
    var oDoc = (0, _winDoc.doc)();

    if (!oDoc.__null) {
      var dom = oDoc.getElementById(scrollRefId);

      if (dom) {
        setScrollRefElement(dom);
      }
    }

    return function () {
      resetTimer();
    };
  });
  var getMargin = (0, _react.useCallback)(function () {
    var ref = scrollRefElement;
    var margin = 0;

    if (ref) {
      var refOffset = (0, _getoffset["default"])(ref, false);

      switch (scrollRefLoc) {
        case "bottom":
          margin += refOffset.bottom - refOffset.top;
          break;

        default:
        case "top":
          break;
      }
    }

    if (!isNaN(scrollMargin)) {
      margin += scrollMargin;
    }

    margin--;
    return margin;
  }, [scrollRefLoc, scrollMargin, scrollRefElement]);

  var getStore = function getStore() {
    return noDelay ? _fastScrollStore["default"] : _scrollStore["default"];
  };

  var handler = {
    click: function click(e) {
      var store = getStore();

      if (preventDefault) {
        e.preventDefault();
      }

      resetTimer();
      var offset = store.scroller.getOffset(targetId);

      if (offset) {
        var _margin = getMargin();

        scollTimer = true;
        (0, _smoothScrollTo["default"])(offset.top - _margin, null, null, function () {
          if (true !== scollTimer) {
            return;
          }

          scollTimer = setTimeout(function () {
            _margin = getMargin();
            offset = store.scroller.getOffset(targetId);
            (0, _smoothScrollTo["default"])(offset.top - _margin, 100);
          }, 500);
        });
      }
    }
  };
  var margin = getMargin();
  return {
    others: others,
    handler: handler,
    targetId: targetId,
    margin: margin,
    style: style
  };
};

var SmoothScrollLink = function SmoothScrollLink(props) {
  var _useSmoothScrollLink = useSmoothScrollLink(props),
      others = _useSmoothScrollLink.others,
      handler = _useSmoothScrollLink.handler,
      margin = _useSmoothScrollLink.margin,
      style = _useSmoothScrollLink.style,
      targetId = _useSmoothScrollLink.targetId;

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_index.ScrollReceiver, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    atom: "a"
  }, others), {}, {
    targetId: targetId,
    scrollMargin: margin,
    style: (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, Styles.link), style),
    onClick: handler.click
  }));
};

var _default = SmoothScrollLink;
exports["default"] = _default;
var Styles = {
  link: {
    cursor: "pointer"
  }
};
module.exports = exports.default;