"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/es.weak-map.js");

require("core-js/modules/web.dom-collections.iterator.js");

require("core-js/modules/es.object.define-property.js");

require("core-js/modules/es.object.get-own-property-descriptor.js");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _reshowReturn = _interopRequireDefault(require("reshow-return"));

var _reactAtomicMolecule = require("react-atomic-molecule");

var _reshowConstant = require("reshow-constant");

var _scrollStore = _interopRequireDefault(require("../../src/stores/scrollStore"));

var _fastScrollStore = _interopRequireDefault(require("../../src/stores/fastScrollStore"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["scrollMargin", "noDelay", "children", "targetId", "container"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ScrollReceiver = function ScrollReceiver(_ref) {
  var _ref$scrollMargin = _ref.scrollMargin,
      scrollMargin = _ref$scrollMargin === void 0 ? "default" : _ref$scrollMargin,
      _ref$noDelay = _ref.noDelay,
      noDelay = _ref$noDelay === void 0 ? false : _ref$noDelay,
      _children = _ref.children,
      targetId = _ref.targetId,
      container = _ref.container,
      resetProps = (0, _objectWithoutPropertiesLoose2["default"])(_ref, _excluded);
  var lastIsShown = (0, _react.useRef)();
  var store = noDelay ? _fastScrollStore["default"] : _scrollStore["default"];
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reshowReturn["default"], {
    store: store,
    initStates: ["scroll"],
    children: function children(_ref2) {
      var _ref2$scroll = _ref2.scroll,
          scrollInfo = _ref2$scroll === void 0 ? {} : _ref2$scroll;
      var activeId = store.getState().get("m" + scrollMargin);
      var scrollTop = scrollInfo.top;
      var pos = store.scroller.getOffset(targetId, store.storeName) || {};
      var isShown = lastIsShown.current || false;

      if (pos.isOnScreen) {
        isShown = true;
        lastIsShown.current = true;
      }

      var active = _reshowConstant.UNDEFINED !== typeof targetId && targetId === activeId;
      var targetInfo = (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, pos), {}, {
        active: active,
        scrollTop: scrollTop,
        scrollInfo: scrollInfo,
        scrollMargin: scrollMargin,
        isShown: isShown,
        targetId: targetId
      });

      if (!isNaN(scrollMargin)) {
        store.scroller.addMargin(scrollMargin);
      }

      if (!container) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAtomicMolecule.SemanticUI, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, resetProps), {}, {
          children: _children
        }));
      }

      var thisChildren = _children;

      if (!thisChildren && /*#__PURE__*/(0, _react.isValidElement)(container)) {
        thisChildren = container.props.children;
      }

      return (0, _reactAtomicMolecule.build)(container)((0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, resetProps), {}, {
        targetInfo: targetInfo
      }), thisChildren);
    }
  });
};

ScrollReceiver.displayName = "ScrollReceiver";
var _default = ScrollReceiver;
exports["default"] = _default;
module.exports = exports.default;