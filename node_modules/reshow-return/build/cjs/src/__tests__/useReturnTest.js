"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("reshow-runtime/helpers/slicedToArray"));

var _react = _interopRequireDefault(require("react"));

var _chai = require("chai");

var _reshowFlux = require("reshow-flux");

var _reshowFluxBase = require("reshow-flux-base");

var _reshowUnit = require("reshow-unit");

var _useReturn = _interopRequireDefault(require("../useReturn"));

describe("Test return", function () {
  it("basic test", function () {
    var _createReducer = (0, _reshowFluxBase.createReducer)(function (state, ation) {
      return action;
    }, {
      foo: "bar"
    }),
        _createReducer2 = (0, _slicedToArray2["default"])(_createReducer, 2),
        store = _createReducer2[0],
        dispatch = _createReducer2[1];

    var Dom = function Dom(props) {
      var state = (0, _useReturn["default"])(["foo"], store);
      return state.foo;
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Dom, null));
    (0, _chai.expect)(wrap.html()).to.equal("bar");
  });
  it("test default immutable", function () {
    var _createReducer3 = (0, _reshowFluxBase.createReducer)(function (state, ation) {
      return action;
    }, (0, _reshowFlux.mergeMap)((0, _reshowFlux.Map)(), {
      m: {}
    })),
        _createReducer4 = (0, _slicedToArray2["default"])(_createReducer3, 2),
        store = _createReducer4[0],
        dispatch = _createReducer4[1];

    var Dom = function Dom(props) {
      var state = (0, _useReturn["default"])(["m"], store);
      (0, _chai.expect)(_reshowFlux.Map.isMap(state.m)).to.be["true"];
      (0, _chai.expect)(state.immutable).to.be["true"];
      return null;
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Dom, null));
  });
  it("test default is not immutable", function () {
    var _createReducer5 = (0, _reshowFluxBase.createReducer)(function (state, ation) {
      return action;
    }, (0, _reshowFlux.mergeMap)((0, _reshowFlux.Map)(), {
      m: {}
    })),
        _createReducer6 = (0, _slicedToArray2["default"])(_createReducer5, 2),
        store = _createReducer6[0],
        dispatch = _createReducer6[1];

    var Dom = function Dom(props) {
      var state = (0, _useReturn["default"])(["m"], store, {
        immutable: false
      });
      (0, _chai.expect)(_reshowFlux.Map.isMap(state.m)).to.be["false"];
      (0, _chai.expect)(state.immutable).to.be.undefined;
      return null;
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Dom, null));
  });
});