"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _createEl = require("create-el");

var _winDoc = require("win-doc");

var _getObjectValue = _interopRequireDefault(require("get-object-value"));

// https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/components/
var SEMANTIC_VERSION = "/npm/semantic-ui@2.4.2/dist/components";
var semanticMap = {
  button: "".concat(SEMANTIC_VERSION, "/button.min.css"),
  card: "".concat(SEMANTIC_VERSION, "/card.min.css"),
  checkbox: "".concat(SEMANTIC_VERSION, "/checkbox.min.css"),
  dimmer: "".concat(SEMANTIC_VERSION, "/dimmer.min.css"),
  divider: "".concat(SEMANTIC_VERSION, "/divider.min.css"),
  dropdown: "".concat(SEMANTIC_VERSION, "/dropdown.min.css"),
  form: "".concat(SEMANTIC_VERSION, "/form.min.css"),
  header: "".concat(SEMANTIC_VERSION, "/header.min.css"),
  image: "".concat(SEMANTIC_VERSION, "/image.min.css"),
  input: "".concat(SEMANTIC_VERSION, "/input.min.css"),
  item: "".concat(SEMANTIC_VERSION, "/item.min.css"),
  label: "".concat(SEMANTIC_VERSION, "/label.min.css"),
  list: "".concat(SEMANTIC_VERSION, "/list.min.css"),
  menu: "".concat(SEMANTIC_VERSION, "/menu.min.css"),
  message: "".concat(SEMANTIC_VERSION, "/message.min.css"),
  modal: "".concat(SEMANTIC_VERSION, "/modal.min.css"),
  popup: "".concat(SEMANTIC_VERSION, "/popup.min.css"),
  progress: "".concat(SEMANTIC_VERSION, "/progress.min.css"),
  rail: "".concat(SEMANTIC_VERSION, "/rail.min.css"),
  search: "".concat(SEMANTIC_VERSION, "/search.min.css"),
  segment: "".concat(SEMANTIC_VERSION, "/segment.min.css"),
  tab: "".concat(SEMANTIC_VERSION, "/tab.min.css"),
  table: "".concat(SEMANTIC_VERSION, "/table.min.css")
};
var cssMap = {
  "fixed-data-table": "/npm/fixed-data-table-2@0.8.13/dist/fixed-data-table.min.css",
  prismjs: "/npm/prismjs/themes/prism.min.css"
};
var group = {
  semantic: semanticMap,
  "default": cssMap
};
var cdn = "https://cdn.jsdelivr.net";
var load = [];
/**
 * Clean bfcache for offline
 */

(0, _winDoc.win)().addEventListener && (0, _winDoc.win)().addEventListener("load", function () {
  return load.splice(0, load.length);
});

var needCSS = function needCSS(mods) {
  var groupKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "default";

  if ((0, _winDoc.win)().__null) {
    return;
  }

  var map = (0, _getObjectValue["default"])(group, [groupKey], {});
  mods.forEach(function (mod) {
    var url = (0, _getObjectValue["default"])(map, [mod]);
    url = url ? cdn + url : mod;

    if (url) {
      if (load[url]) {
        return;
      } else {
        load[url] = true;
        (0, _createEl.css)()()(url);
      }
    }
  });
};

var _default = needCSS;
exports["default"] = _default;
module.exports = exports.default;