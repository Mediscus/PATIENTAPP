"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("reshow-runtime/helpers/slicedToArray"));

var _react = _interopRequireDefault(require("react"));

var _chai = require("chai");

var _reshowUnit = require("reshow-unit");

var _reshowFluxBase = require("reshow-flux-base");

var _sinon = _interopRequireDefault(require("sinon"));

var _useStore = _interopRequireDefault(require("../useStore"));

describe("useStore Test", function () {
  var reducer;
  beforeEach(function () {
    reducer = (0, _reshowFluxBase.createReducer)(function (state, action) {
      return action;
    }, {});
  });
  it("test default", function () {
    var _reducer = reducer,
        _reducer2 = (0, _slicedToArray2["default"])(_reducer, 2),
        store = _reducer2[0],
        dispatch = _reducer2[1];

    var Comp = function Comp(props) {
      var state = (0, _useStore["default"])(store, function () {
        return function () {
          return "foo";
        };
      });
      return /*#__PURE__*/_react["default"].createElement("div", null, state);
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Comp, null));
    (0, _chai.expect)(wrap.html()).to.equal("<div>foo</div>");
  });
  it("test apply dispatch", function (done) {
    var _reducer3 = reducer,
        _reducer4 = (0, _slicedToArray2["default"])(_reducer3, 2),
        store = _reducer4[0],
        dispatch = _reducer4[1];

    var Comp = function Comp(props) {
      var state = (0, _useStore["default"])(store, function (setState) {
        return function () {
          setState && setState("bar");
        };
      });
      return /*#__PURE__*/_react["default"].createElement("div", null, state);
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Comp, null));
    dispatch();
    setTimeout(function () {
      (0, _chai.expect)(wrap.html()).to.equal("<div>bar</div>");
      done();
    });
  });
  it("test not apply dispatch", function (done) {
    var spy;

    var heeding = function heeding(setState) {
      spy = _sinon["default"].spy(function (state, action) {
        if (action && action.type === "on") {
          setState("bar");
        }

        return "foo";
      });
      return spy;
    };

    var _reducer5 = reducer,
        _reducer6 = (0, _slicedToArray2["default"])(_reducer5, 2),
        store = _reducer6[0],
        dispatch = _reducer6[1];

    var Comp = function Comp(props) {
      var state = (0, _useStore["default"])(store, heeding);
      return /*#__PURE__*/_react["default"].createElement("div", null, state);
    };

    var wrap = (0, _reshowUnit.mount)( /*#__PURE__*/_react["default"].createElement(Comp, null));
    (0, _chai.expect)(wrap.html()).to.equal("<div>foo</div>");
    (0, _chai.expect)(spy.callCount).to.equal(0);
    dispatch("on");
    setTimeout(function () {
      (0, _chai.expect)(spy.callCount).to.equal(1);
      (0, _chai.expect)(wrap.html()).to.equal("<div>bar</div>");
      dispatch("off");
      setTimeout(function () {
        (0, _chai.expect)(spy.callCount).to.equal(2);
        (0, _chai.expect)(wrap.html()).to.equal("<div>bar</div>");
        done();
      });
    });
  });
});