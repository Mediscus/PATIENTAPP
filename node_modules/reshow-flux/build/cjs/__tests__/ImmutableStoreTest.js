"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("reshow-runtime/helpers/slicedToArray"));

var _chai = require("chai");

var _ImmutableStore = _interopRequireWildcard(require("../ImmutableStore"));

describe("Test ImmutableStore", function () {
  var reducer;
  beforeEach(function () {
    reducer = (0, _ImmutableStore["default"])(function (state, action) {
      return (0, _ImmutableStore.mergeMap)(state, action);
    });
  });
  it("test merge map", function () {
    var _reducer = reducer,
        _reducer2 = (0, _slicedToArray2["default"])(_reducer, 2),
        store = _reducer2[0],
        dispatch = _reducer2[1];

    var action = {
      aaa: {
        bbb: "ccc"
      }
    };
    dispatch(action);
    var state = store.getState();
    (0, _chai.expect)(_ImmutableStore.Map.isMap(state.get("aaa"))).to.be["true"];
    (0, _chai.expect)(state.get("aaa").toJS()).to.deep.equal({
      bbb: "ccc"
    });
  });
  it("test get map", function () {
    var _reducer3 = reducer,
        _reducer4 = (0, _slicedToArray2["default"])(_reducer3, 2),
        store = _reducer4[0],
        dispatch = _reducer4[1];

    var action = {
      aaa: {
        bbb: "ccc"
      }
    };
    dispatch(action);
    (0, _chai.expect)(store.getMap("aaa")).to.deep.equal({
      bbb: "ccc"
    });
  });
});