import _slicedToArray from "reshow-runtime/es/helpers/slicedToArray";
import { expect } from "chai";
import ImmutableStore, { Map, mergeMap } from "../ImmutableStore";
describe("Test ImmutableStore", function () {
  var reducer;
  beforeEach(function () {
    reducer = ImmutableStore(function (state, action) {
      return mergeMap(state, action);
    });
  });
  it("test merge map", function () {
    var _reducer = reducer,
        _reducer2 = _slicedToArray(_reducer, 2),
        store = _reducer2[0],
        dispatch = _reducer2[1];

    var action = {
      aaa: {
        bbb: "ccc"
      }
    };
    dispatch(action);
    var state = store.getState();
    expect(Map.isMap(state.get("aaa"))).to.be["true"];
    expect(state.get("aaa").toJS()).to.deep.equal({
      bbb: "ccc"
    });
  });
  it("test get map", function () {
    var _reducer3 = reducer,
        _reducer4 = _slicedToArray(_reducer3, 2),
        store = _reducer4[0],
        dispatch = _reducer4[1];

    var action = {
      aaa: {
        bbb: "ccc"
      }
    };
    dispatch(action);
    expect(store.getMap("aaa")).to.deep.equal({
      bbb: "ccc"
    });
  });
});