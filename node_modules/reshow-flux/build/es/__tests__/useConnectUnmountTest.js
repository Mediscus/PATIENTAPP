import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _assertThisInitialized from "reshow-runtime/es/helpers/assertThisInitialized";
import _inherits from "reshow-runtime/es/helpers/inherits";
import _createSuper from "reshow-runtime/es/helpers/createSuper";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
import _slicedToArray from "reshow-runtime/es/helpers/slicedToArray";
import React, { PureComponent } from "react";
import { expect } from "chai";
import { mount } from "reshow-unit";
import sinon from "sinon";
import { createReducer } from "reshow-flux-base";
import useConnect from "../useConnect";
describe("useConnect Unmount Test", function () {
  var sandbox = sinon.createSandbox();
  var reducer;
  beforeEach(function () {
    reducer = createReducer(function (state, action) {
      return action;
    }, {});
  });
  afterEach(function () {
    sandbox.restore();
  });
  it("basic test", function (done) {
    var _Foo;

    var _reducer = reducer,
        _reducer2 = _slicedToArray(_reducer, 2),
        store = _reducer2[0],
        dispatch = _reducer2[1];

    var Foo = function Foo(props) {
      var state = useConnect({
        storeLocator: function storeLocator() {
          return store;
        },
        calculateState: function calculateState(prevState, props) {
          return store.getState();
        }
      })(props);
      return /*#__PURE__*/React.createElement("div", {
        className: state.foo
      });
    };

    var FakeComponent = /*#__PURE__*/function (_PureComponent) {
      _inherits(FakeComponent, _PureComponent);

      var _super = _createSuper(FakeComponent);

      function FakeComponent() {
        var _this;

        _classCallCheck(this, FakeComponent);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _super.call.apply(_super, [this].concat(args));

        _defineProperty(_assertThisInitialized(_this), "state", {
          show: true
        });

        return _this;
      }

      _createClass(FakeComponent, [{
        key: "set",
        value: function set(k, v) {
          this.setState(_defineProperty({}, k, v));
        }
      }, {
        key: "render",
        value: function render() {
          if (this.state.show) {
            return _Foo || (_Foo = /*#__PURE__*/React.createElement(Foo, null));
          } else {
            return null;
          }
        }
      }]);

      return FakeComponent;
    }(PureComponent);

    var wrap = mount( /*#__PURE__*/React.createElement(FakeComponent, null));
    var oFake = wrap.instance();
    sandbox.spy(store, "removeListener");
    console.log("before unmount", store.removeListener.callCount);
    expect(store.removeListener.callCount).to.equal(0);
    oFake.set("show", false);
    expect(store.removeListener.callCount).to.equal(1);
    console.log("after unmount", store.removeListener.callCount);
    dispatch({});
    done();
  });
});