import _slicedToArray from "reshow-runtime/es/helpers/slicedToArray";
import { Map, Set, fromJS } from "immutable";
import toJS from "./toJS";
import { createReducer } from "reshow-flux-base";

var ImmutableStore = function ImmutableStore(reduce) {
  var initState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Map();

  var _createReducer = createReducer(reduce, initState),
      _createReducer2 = _slicedToArray(_createReducer, 2),
      store = _createReducer2[0],
      dispatch = _createReducer2[1];

  store.getMap = function (k) {
    return getMap(store.getState(), k);
  };

  return [store, dispatch];
};

var getMap = function getMap(state, k) {
  var _toJS;

  return (_toJS = toJS(state.get(k))) !== null && _toJS !== void 0 ? _toJS : {};
};

var mergeMap = function mergeMap(state, JSArray) {
  return state.merge(fromJS(JSArray));
};

export default ImmutableStore;
export { Map, Set, mergeMap };