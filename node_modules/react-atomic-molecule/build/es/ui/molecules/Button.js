import _extends from "reshow-runtime/es/helpers/extends";
import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
var _excluded = ["type", "className", "children", "icon", "style"];
import React, { useEffect } from "react";
import { mixClass } from "class-lib";
import SemanticUI from "../molecules/SemanticUI";
import Icon from "../molecules/Icon";
import useCSS from "../../src/useCSS";

var Button = function Button(props) {
  useCSS(["button"], "semantic");

  var _props$type = props.type,
      type = _props$type === void 0 ? "button" : _props$type,
      className = props.className,
      children = props.children,
      icon = props.icon,
      style = props.style,
      others = _objectWithoutProperties(props, _excluded);

  var classes = mixClass(className, "button");
  var thisIcon;
  var buttonWithIconStyle;

  if (icon) {
    thisIcon = /*#__PURE__*/React.createElement(Icon, {
      style: Styles.icon
    }, icon);
    buttonWithIconStyle = Styles.buttonWithIcon;
  }

  return /*#__PURE__*/React.createElement(SemanticUI, _extends({
    atom: "button",
    type: type
  }, others, {
    className: classes,
    style: _objectSpread(_objectSpread({}, buttonWithIconStyle), style)
  }), thisIcon, children);
};

export default Button;
var Styles = {
  icon: {
    width: 25,
    height: 25,
    left: 20,
    top: 7,
    fill: "#fff",
    position: "absolute"
  },
  buttonWithIcon: {
    position: "relative",
    paddingLeft: 44
  }
};