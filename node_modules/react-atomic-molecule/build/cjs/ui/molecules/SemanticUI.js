"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _typeof = require("reshow-runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var Atoms = _interopRequireWildcard(require("react-atomic-atom"));

var _getObjectValue = _interopRequireDefault(require("get-object-value"));

var _ucfirstJs = _interopRequireDefault(require("ucfirst-js"));

var _reshowConstant = require("reshow-constant");

var _injectStyle = _interopRequireDefault(require("../../src/lib/styles/injectStyle"));

var _bindStyles = _interopRequireDefault(require("../../src/lib/styles/bindStyles"));

var _getChildMapping = require("../../src/getChildMapping");

var _excluded = ["ui", "renderChildren", "atom", "children", "styles", "styleOrder"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var getChildren = function getChildren(render, children) {
  return render ? (0, _getChildMapping.bindChildKey)(children) : null;
};

var SemanticUI = function SemanticUI(_ref) {
  var _ref$ui = _ref.ui,
      ui = _ref$ui === void 0 ? true : _ref$ui,
      _ref$renderChildren = _ref.renderChildren,
      renderChildren = _ref$renderChildren === void 0 ? true : _ref$renderChildren,
      atom = _ref.atom,
      children = _ref.children,
      styles = _ref.styles,
      styleOrder = _ref.styleOrder,
      others = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var component;

  switch (atom) {
    case "null":
      return null;

    case "input":
      component = Atoms.Input;
      renderChildren = false;
      break;

    case "img":
      component = Atoms.Img;
      renderChildren = false;
      break;

    case "path":
      component = Atoms.Path;
      renderChildren = false;
      ui = false;
      break;

    default:
      component = (0, _getObjectValue["default"])(Atoms, [(0, _ucfirstJs["default"])(atom)], function () {
        return Atoms.Div;
      });
      break;
  } // bindStyles need after inject


  if (styles) {
    var className = others.className,
        style = others.style; // Need avoid props pass by ref !!important!!

    (0, _injectStyle["default"])();
    var bindProps = (0, _bindStyles["default"])({
      className: className,
      style: style,
      styles: styles,
      styleOrder: styleOrder
    });
    (0, _reshowConstant.KEYS)(bindProps).forEach(function (key) {
      return others[key] = bindProps[key];
    });
  }

  if (ui) {
    /**
     * Need put after bindProps
     *!!important!! others.className maybe effect by bindProps, so use it here.
     */
    others.className = others.className ? others.className + " ui" : "ui";
  }

  return /*#__PURE__*/(0, _react.createElement)(component, others, getChildren(renderChildren, children));
};

var _default = SemanticUI;
exports["default"] = _default;
module.exports = exports.default;