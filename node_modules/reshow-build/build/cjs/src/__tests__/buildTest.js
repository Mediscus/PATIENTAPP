"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _objectWithoutProperties2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("reshow-runtime/helpers/createSuper"));

var _react = _interopRequireWildcard(require("react"));

var _chai = require("chai");

var _reshowUnit = require("reshow-unit");

var _index = _interopRequireDefault(require("../index"));

var _excluded = ["comp"];

var _div, _div2, _div3, _div4, _div5;

describe("Test build", function () {
  it("test build string", function () {
    var vdom = (0, _index["default"])("Foo Bar")();
    var actual = (0, _reshowUnit.shallow)(vdom).html();
    (0, _chai.expect)(actual).to.equal("<span>Foo Bar</span>");
  });
  it("test build native html", function () {
    var vdom = (0, _index["default"])("a")();
    var actual = (0, _reshowUnit.shallow)(vdom).html();
    (0, _chai.expect)(actual).to.equal("<a></a>");
  });
  it("test function with error", function () {
    var run = function run() {
      (0, _index["default"])(function (props) {
        (0, _chai.expect)(props.foo).to.equal("bar111");
      })({
        foo: "bar"
      });
    };

    (0, _chai.expect)(run).to["throw"]();
  });
  it("test function with return", function () {
    var a = (0, _index["default"])(function (props) {
      return props.foo;
    })({
      foo: "barbar"
    });
    (0, _chai.expect)(a).to.equal("barbar");
  });
  it("test with stateless function return", function () {
    var func = function func(props) {
      return /*#__PURE__*/_react["default"].createElement("div", props);
    };

    var a = (0, _index["default"])(func)({
      foo: "barbar"
    }); // will return react instance

    (0, _chai.expect)(a.props.foo).to.equal("barbar");
    (0, _chai.expect)( /*#__PURE__*/(0, _react.isValidElement)(a)).to.be["true"];
  });
  it("test function return another component", function () {
    var FakeComponent = /*#__PURE__*/function (_PureComponent) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent);

      var _super = (0, _createSuper2["default"])(FakeComponent);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return _super.apply(this, arguments);
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return /*#__PURE__*/_react["default"].createElement("div", null, this.props.foo);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var func = function func(props) {
      return /*#__PURE__*/_react["default"].createElement(FakeComponent, props);
    };

    var vDom = (0, _index["default"])(func)({
      foo: "bar3"
    });
    var html = (0, _reshowUnit.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal("<div>bar3</div>");
  });
  it("test with func and child", function () {
    var result = (0, _index["default"])(function (props) {
      return props;
    })({
      foo: "bar"
    }, "hello child");
    (0, _chai.expect)(result.children).to.equal("hello child");
    (0, _chai.expect)(result.foo).to.equal("bar");
  });
  it("test with anonymous func and child", function () {
    var child = [_div || (_div = /*#__PURE__*/_react["default"].createElement("div", {
      id: "1",
      key: "0"
    })), _div2 || (_div2 = /*#__PURE__*/_react["default"].createElement("div", {
      id: "2",
      key: "1"
    }))];
    var buildDom = (0, _index["default"])(function (_ref) {
      var children = _ref.children;
      return /*#__PURE__*/_react["default"].createElement("div", {
        id: "root"
      }, children);
    })({}, child);
    var html = (0, _reshowUnit.shallow)( /*#__PURE__*/_react["default"].createElement("div", null, buildDom)).html();

    var stateFunc = function stateFunc(_ref2) {
      var children = _ref2.children;
      return /*#__PURE__*/_react["default"].createElement("div", {
        id: "root"
      }, children);
    };

    var stateFuncBuildDom = (0, _index["default"])(stateFunc)({}, child);
    var stateFuncHtml = (0, _reshowUnit.shallow)( /*#__PURE__*/_react["default"].createElement("div", null, stateFuncBuildDom)).html();
    var expected = '<div><div id="root"><div id="1"></div><div id="2"></div></div></div>';
    (0, _chai.expect)(html).to.equal(expected);
    (0, _chai.expect)(stateFuncHtml).to.equal(expected);
  });
  it("test with component", function () {
    var FakeComponent = function FakeComponent(props) {
      return /*#__PURE__*/_react["default"].createElement("div", null, props.foo);
    };

    var vDom = (0, _index["default"])(FakeComponent)({
      foo: "bar"
    });
    var html = (0, _reshowUnit.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal("<div>bar</div>");
  });
  it("test with instance", function () {
    var FakeComponent = function FakeComponent(props) {
      return /*#__PURE__*/_react["default"].createElement("div", null, props.foo);
    };

    var vDom = /*#__PURE__*/_react["default"].createElement(FakeComponent, null);

    var html = (0, _reshowUnit.shallow)((0, _index["default"])(vDom)({
      foo: "bar1"
    })).html();
    (0, _chai.expect)(html).to.equal("<div>bar1</div>");
  });
  it("test with class component", function () {
    var FakeComponent = /*#__PURE__*/function (_PureComponent2) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent2);

      var _super2 = (0, _createSuper2["default"])(FakeComponent);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return _super2.apply(this, arguments);
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return /*#__PURE__*/_react["default"].createElement("div", null, this.props.foo);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var vDom = (0, _index["default"])(FakeComponent)({
      foo: "bar2"
    });
    var html = (0, _reshowUnit.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal("<div>bar2</div>");
  });
  it("test with clone and child", function () {
    var FakeComponent = /*#__PURE__*/function (_PureComponent3) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent3);

      var _super3 = (0, _createSuper2["default"])(FakeComponent);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return _super3.apply(this, arguments);
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              comp = _this$props.comp,
              others = (0, _objectWithoutProperties2["default"])(_this$props, _excluded);
          return (0, _index["default"])(comp)(others, "bar");
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var html = (0, _reshowUnit.shallow)( /*#__PURE__*/_react["default"].createElement(FakeComponent, {
      id: "foo",
      comp: _div3 || (_div3 = /*#__PURE__*/_react["default"].createElement("div", null, "foo"))
    })).html();
    (0, _chai.expect)(html).to.equal('<div id="foo">bar</div>');
  });
  it("test with class and child", function () {
    var FakeComponent = /*#__PURE__*/function (_PureComponent4) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent4);

      var _super4 = (0, _createSuper2["default"])(FakeComponent);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return _super4.apply(this, arguments);
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return /*#__PURE__*/_react["default"].createElement("div", this.props);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var vDom = (0, _index["default"])(FakeComponent)({
      id: "foo"
    }, "hello");
    var html = (0, _reshowUnit.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal('<div id="foo">hello</div>');
  });
  it("test with empty", function () {
    var result = (0, _index["default"])()();
    (0, _chai.expect)(result).to.be["null"];
  });
});
describe("Test build with key", function () {
  it("with one child", function () {
    var comp = _div4 || (_div4 = /*#__PURE__*/_react["default"].createElement("div", null));

    var buildComp = (0, _index["default"])(comp)({
      key: "foo"
    });
    (0, _chai.expect)(buildComp.key).to.equal("foo");
  });
  it("with multi child", function () {
    var comp = _div5 || (_div5 = /*#__PURE__*/_react["default"].createElement("div", null));

    var buildComp = (0, _index["default"])([comp, comp])({
      key: "foo"
    });
    (0, _chai.expect)(buildComp[0].key !== buildComp[1].key).be["true"];
  });
});