"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _react = _interopRequireWildcard(require("react"));

var _chai = require("chai");

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _index = _interopRequireDefault(require("../index"));

var _div;

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});
describe("Test wrap", function () {
  it("test build with wrap", function () {
    var FakeDom = function FakeDom() {
      return (0, _index["default"])("test", {
        wrap: _div || (_div = /*#__PURE__*/_react["default"].createElement("div", null))
      })();
    };

    var wrap = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(FakeDom, null));
    (0, _chai.expect)(wrap.html()).to.equal("<div>test</div>");
  });
  it("test wrap after function call", function () {
    var FakeDom = function FakeDom() {
      return (0, _index["default"])(function () {
        return "after-func-call";
      }, {
        wrap: "div",
        doCallFunction: true
      })({
        "data-foo": "bar"
      });
    };

    var wrap = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(FakeDom, null));
    (0, _chai.expect)(wrap.html()).to.equal('<div data-foo="bar">after-func-call</div>');
  });
  it("test wrap after function call and unset props", function () {
    var FakeDom = function FakeDom() {
      return (0, _index["default"])(function (props) {
        delete props["data-foo"];
        return "after-func-call";
      }, {
        wrap: "div",
        doCallFunction: true
      })({
        "data-foo": "foo",
        "data-bar": "bar"
      });
    };

    var wrap = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(FakeDom, null));
    (0, _chai.expect)(wrap.html()).to.equal('<div data-bar="bar">after-func-call</div>');
  });
});