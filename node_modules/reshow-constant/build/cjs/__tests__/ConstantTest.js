"use strict";

var _chai = require("chai");

var _index = require("../index");

describe("Test Constant", function () {
  it("test undefined", function () {
    (0, _chai.expect)(_index.UNDEFINED).to.equal("undefined");
  });
  it("test function", function () {
    (0, _chai.expect)(_index.FUNCTION).to.equal("function");
  });
  it("test object", function () {
    (0, _chai.expect)(_index.OBJECT).to.equal("object");
  });
  it("test default", function () {
    (0, _chai.expect)(_index.DEFAULT).to.equal("default");
  });
  it("test string", function () {
    (0, _chai.expect)(_index.STRING).to.equal("string");
  });
  it("test symbol", function () {
    (0, _chai.expect)(_index.SYMBOL).to.equal("symbol");
  });
  it("test script", function () {
    (0, _chai.expect)(_index.SCRIPT).to.equal("script");
  });
  it("test TYPE_ERROR", function () {
    (0, _chai.expect)(_index.TYPE_ERROR).to.equal("TypeError");
  });
});
describe("Test Type", function () {
  it("test type undefined", function () {
    (0, _chai.expect)(_index.T_UNDEFINED).to.be.undefined;
  });
  it("test type null", function () {
    (0, _chai.expect)(_index.T_NULL).to.be["null"];
  });
  it("test type true", function () {
    (0, _chai.expect)(_index.T_TRUE).to.be["true"];
  });
  it("test type false", function () {
    (0, _chai.expect)(_index.T_FALSE).to.be["false"];
  });
});
describe("Test FUNCTION", function () {
  it("test keys", function () {
    var a = {
      foo: "bar"
    };
    (0, _chai.expect)((0, _index.KEYS)(a)).to.deep.equal(["foo"]);
  });
  it("test isArray", function () {
    var a = ["foo"];
    (0, _chai.expect)((0, _index.IS_ARRAY)(a)).to.be["true"];
  });
  it("test is not Array", function () {
    var a = {
      foo: "bar"
    };
    (0, _chai.expect)((0, _index.IS_ARRAY)(a)).to.be["false"];
  });
});