import { getScrollNode } from "get-scroll-info";
import callfunc from "call-func";
import { easeInOutCubic, aniTimer } from "easing-lib";
var isRunning = false;
/**
 *  !!Important!! any logic change need take care isRunning
 */

var smoothScrollTo = function smoothScrollTo(to, duration, el, callback) {
  var scrollNode = getScrollNode(el);

  var cb = function cb() {
    isRunning = false;
    callfunc(callback, [scrollNode]);
  };

  if (isRunning) {
    isRunning = false;
    setTimeout(function () {
      scrollNode.scrollTop = to;
      cb();
    });
    return false;
  }

  if (!duration) {
    duration = 900;
  }

  var from = scrollNode.scrollTop;
  var go = to - from;

  if (!go) {
    return cb();
  }

  aniTimer({
    isContinue: function isContinue(elapsedTime) {
      var progress = easeInOutCubic(elapsedTime, from, go, duration);
      scrollNode.scrollTop = progress;

      if (isRunning) {
        return true;
      }
    },
    cancel: function cancel() {
      return cb();
    },
    done: function done() {
      return cb();
    }
  }, duration);
  isRunning = true;
};

export default smoothScrollTo;